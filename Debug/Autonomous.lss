
Autonomous.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  0000151c  000015b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000151c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000005e  0080013a  0080013a  000015ea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000015ea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000161c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000210  00000000  00000000  00001660  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002219  00000000  00000000  00001870  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cf4  00000000  00000000  00003a89  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000012aa  00000000  00000000  0000477d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003c0  00000000  00000000  00005a28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000071f  00000000  00000000  00005de8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000135f  00000000  00000000  00006507  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a0  00000000  00000000  00007866  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 65 06 	jmp	0xcca	; 0xcca <__vector_16>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ec e1       	ldi	r30, 0x1C	; 28
      7c:	f5 e1       	ldi	r31, 0x15	; 21
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	aa 33       	cpi	r26, 0x3A	; 58
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	aa e3       	ldi	r26, 0x3A	; 58
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a8 39       	cpi	r26, 0x98	; 152
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
      9e:	0c 94 8c 0a 	jmp	0x1518	; 0x1518 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
 #define  F_CPU 1000000UL
 #include <util/delay.h>
 
  int main(void)
{
	DIO_SetPinDirection(PORT2,5,OUTPUT);
      a6:	41 e0       	ldi	r20, 0x01	; 1
      a8:	65 e0       	ldi	r22, 0x05	; 5
      aa:	82 e0       	ldi	r24, 0x02	; 2
      ac:	0e 94 74 06 	call	0xce8	; 0xce8 <DIO_SetPinDirection>
	DIO_SetPinDirection(PORT2,4,OUTPUT);
      b0:	41 e0       	ldi	r20, 0x01	; 1
      b2:	64 e0       	ldi	r22, 0x04	; 4
      b4:	82 e0       	ldi	r24, 0x02	; 2
      b6:	0e 94 74 06 	call	0xce8	; 0xce8 <DIO_SetPinDirection>
	DIO_SetPinDirection(PORT2,3,OUTPUT);
      ba:	41 e0       	ldi	r20, 0x01	; 1
      bc:	63 e0       	ldi	r22, 0x03	; 3
      be:	82 e0       	ldi	r24, 0x02	; 2
      c0:	0e 94 74 06 	call	0xce8	; 0xce8 <DIO_SetPinDirection>
	DIO_SetPinDirection(PORT2,2,OUTPUT);
      c4:	41 e0       	ldi	r20, 0x01	; 1
      c6:	62 e0       	ldi	r22, 0x02	; 2
      c8:	82 e0       	ldi	r24, 0x02	; 2
      ca:	0e 94 74 06 	call	0xce8	; 0xce8 <DIO_SetPinDirection>
	DIO_SetPinDirection(PORT2,1,OUTPUT);
      ce:	41 e0       	ldi	r20, 0x01	; 1
      d0:	61 e0       	ldi	r22, 0x01	; 1
      d2:	82 e0       	ldi	r24, 0x02	; 2
      d4:	0e 94 74 06 	call	0xce8	; 0xce8 <DIO_SetPinDirection>
	DIO_SetPinDirection(PORT3,PIN7,OUTPUT);
      d8:	41 e0       	ldi	r20, 0x01	; 1
      da:	67 e0       	ldi	r22, 0x07	; 7
      dc:	83 e0       	ldi	r24, 0x03	; 3
      de:	0e 94 74 06 	call	0xce8	; 0xce8 <DIO_SetPinDirection>
	config_servo_timer();
      e2:	0e 94 3c 06 	call	0xc78	; 0xc78 <config_servo_timer>
	
	 // led1>>left   led2>>right   led3>>backward    led4>>forward 
	 
   Train(); 
      e6:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <Train>
   DIO_SetPinValue(PORT2,5,1);
      ea:	41 e0       	ldi	r20, 0x01	; 1
      ec:	65 e0       	ldi	r22, 0x05	; 5
      ee:	82 e0       	ldi	r24, 0x02	; 2
      f0:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
   Test();
      f4:	0e 94 3d 05 	call	0xa7a	; 0xa7a <Test>
      f8:	ff cf       	rjmp	.-2      	; 0xf8 <main+0x52>

000000fa <save_q_table>:
      }
      //printf("\n");
     //delay(2000);
   }
  //  printf("\nEVALUATION ENDED");
 }
      fa:	ef 92       	push	r14
      fc:	ff 92       	push	r15
      fe:	0f 93       	push	r16
     100:	1f 93       	push	r17
     102:	cf 93       	push	r28
     104:	df 93       	push	r29
     106:	00 e0       	ldi	r16, 0x00	; 0
     108:	10 e0       	ldi	r17, 0x00	; 0
     10a:	c0 e0       	ldi	r28, 0x00	; 0
     10c:	d0 e0       	ldi	r29, 0x00	; 0
     10e:	21 c0       	rjmp	.+66     	; 0x152 <save_q_table+0x58>
     110:	f8 01       	movw	r30, r16
     112:	ee 0f       	add	r30, r30
     114:	ff 1f       	adc	r31, r31
     116:	ee 0f       	add	r30, r30
     118:	ff 1f       	adc	r31, r31
     11a:	ee 0d       	add	r30, r14
     11c:	ff 1d       	adc	r31, r15
     11e:	ee 0f       	add	r30, r30
     120:	ff 1f       	adc	r31, r31
     122:	ee 0f       	add	r30, r30
     124:	ff 1f       	adc	r31, r31
     126:	e6 5c       	subi	r30, 0xC6	; 198
     128:	fe 4f       	sbci	r31, 0xFE	; 254
     12a:	40 81       	ld	r20, Z
     12c:	51 81       	ldd	r21, Z+1	; 0x01
     12e:	62 81       	ldd	r22, Z+2	; 0x02
     130:	73 81       	ldd	r23, Z+3	; 0x03
     132:	ce 01       	movw	r24, r28
     134:	0e 94 2f 0a 	call	0x145e	; 0x145e <eeprom_write_dword>
     138:	24 96       	adiw	r28, 0x04	; 4
     13a:	8f ef       	ldi	r24, 0xFF	; 255
     13c:	e8 1a       	sub	r14, r24
     13e:	f8 0a       	sbc	r15, r24
     140:	02 c0       	rjmp	.+4      	; 0x146 <save_q_table+0x4c>
     142:	e1 2c       	mov	r14, r1
     144:	f1 2c       	mov	r15, r1
     146:	84 e0       	ldi	r24, 0x04	; 4
     148:	e8 16       	cp	r14, r24
     14a:	f1 04       	cpc	r15, r1
     14c:	0c f3       	brlt	.-62     	; 0x110 <save_q_table+0x16>
     14e:	0f 5f       	subi	r16, 0xFF	; 255
     150:	1f 4f       	sbci	r17, 0xFF	; 255
     152:	04 30       	cpi	r16, 0x04	; 4
     154:	11 05       	cpc	r17, r1
     156:	ac f3       	brlt	.-22     	; 0x142 <save_q_table+0x48>
     158:	df 91       	pop	r29
     15a:	cf 91       	pop	r28
     15c:	1f 91       	pop	r17
     15e:	0f 91       	pop	r16
     160:	ff 90       	pop	r15
     162:	ef 90       	pop	r14
     164:	08 95       	ret

00000166 <retrive_q_table>:
     166:	ef 92       	push	r14
     168:	ff 92       	push	r15
     16a:	0f 93       	push	r16
     16c:	1f 93       	push	r17
     16e:	cf 93       	push	r28
     170:	df 93       	push	r29
     172:	00 e0       	ldi	r16, 0x00	; 0
     174:	10 e0       	ldi	r17, 0x00	; 0
     176:	c0 e0       	ldi	r28, 0x00	; 0
     178:	d0 e0       	ldi	r29, 0x00	; 0
     17a:	21 c0       	rjmp	.+66     	; 0x1be <retrive_q_table+0x58>
     17c:	ce 01       	movw	r24, r28
     17e:	0e 94 29 0a 	call	0x1452	; 0x1452 <eeprom_read_dword>
     182:	f8 01       	movw	r30, r16
     184:	ee 0f       	add	r30, r30
     186:	ff 1f       	adc	r31, r31
     188:	ee 0f       	add	r30, r30
     18a:	ff 1f       	adc	r31, r31
     18c:	ee 0d       	add	r30, r14
     18e:	ff 1d       	adc	r31, r15
     190:	ee 0f       	add	r30, r30
     192:	ff 1f       	adc	r31, r31
     194:	ee 0f       	add	r30, r30
     196:	ff 1f       	adc	r31, r31
     198:	e6 5c       	subi	r30, 0xC6	; 198
     19a:	fe 4f       	sbci	r31, 0xFE	; 254
     19c:	60 83       	st	Z, r22
     19e:	71 83       	std	Z+1, r23	; 0x01
     1a0:	82 83       	std	Z+2, r24	; 0x02
     1a2:	93 83       	std	Z+3, r25	; 0x03
     1a4:	24 96       	adiw	r28, 0x04	; 4
     1a6:	8f ef       	ldi	r24, 0xFF	; 255
     1a8:	e8 1a       	sub	r14, r24
     1aa:	f8 0a       	sbc	r15, r24
     1ac:	02 c0       	rjmp	.+4      	; 0x1b2 <retrive_q_table+0x4c>
     1ae:	e1 2c       	mov	r14, r1
     1b0:	f1 2c       	mov	r15, r1
     1b2:	84 e0       	ldi	r24, 0x04	; 4
     1b4:	e8 16       	cp	r14, r24
     1b6:	f1 04       	cpc	r15, r1
     1b8:	0c f3       	brlt	.-62     	; 0x17c <retrive_q_table+0x16>
     1ba:	0f 5f       	subi	r16, 0xFF	; 255
     1bc:	1f 4f       	sbci	r17, 0xFF	; 255
     1be:	04 30       	cpi	r16, 0x04	; 4
     1c0:	11 05       	cpc	r17, r1
     1c2:	ac f3       	brlt	.-22     	; 0x1ae <retrive_q_table+0x48>
     1c4:	df 91       	pop	r29
     1c6:	cf 91       	pop	r28
     1c8:	1f 91       	pop	r17
     1ca:	0f 91       	pop	r16
     1cc:	ff 90       	pop	r15
     1ce:	ef 90       	pop	r14
     1d0:	08 95       	ret

000001d2 <RANDOM>:
     1d2:	0e 94 19 0a 	call	0x1432	; 0x1432 <rand>
     1d6:	64 e6       	ldi	r22, 0x64	; 100
     1d8:	70 e0       	ldi	r23, 0x00	; 0
     1da:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__divmodhi4>
     1de:	bc 01       	movw	r22, r24
     1e0:	99 0f       	add	r25, r25
     1e2:	88 0b       	sbc	r24, r24
     1e4:	99 0b       	sbc	r25, r25
     1e6:	0e 94 52 08 	call	0x10a4	; 0x10a4 <__floatsisf>
     1ea:	20 e0       	ldi	r18, 0x00	; 0
     1ec:	30 e0       	ldi	r19, 0x00	; 0
     1ee:	48 ec       	ldi	r20, 0xC8	; 200
     1f0:	52 e4       	ldi	r21, 0x42	; 66
     1f2:	0e 94 de 07 	call	0xfbc	; 0xfbc <__divsf3>
     1f6:	08 95       	ret

000001f8 <DECAY>:
     1f8:	28 e4       	ldi	r18, 0x48	; 72
     1fa:	31 ee       	ldi	r19, 0xE1	; 225
     1fc:	4a e7       	ldi	r20, 0x7A	; 122
     1fe:	5f e3       	ldi	r21, 0x3F	; 63
     200:	0e 94 07 09 	call	0x120e	; 0x120e <__mulsf3>
     204:	08 95       	ret

00000206 <GET_STATE>:
     206:	cf 93       	push	r28
     208:	df 93       	push	r29
     20a:	8a e5       	ldi	r24, 0x5A	; 90
     20c:	0e 94 2c 06 	call	0xc58	; 0xc58 <set_servo_angel>
     210:	2f e9       	ldi	r18, 0x9F	; 159
     212:	86 e8       	ldi	r24, 0x86	; 134
     214:	91 e0       	ldi	r25, 0x01	; 1
     216:	21 50       	subi	r18, 0x01	; 1
     218:	80 40       	sbci	r24, 0x00	; 0
     21a:	90 40       	sbci	r25, 0x00	; 0
     21c:	e1 f7       	brne	.-8      	; 0x216 <GET_STATE+0x10>
     21e:	00 c0       	rjmp	.+0      	; 0x220 <GET_STATE+0x1a>
     220:	00 00       	nop
     222:	0e 94 30 07 	call	0xe60	; 0xe60 <ultarasonic_distance>
     226:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <distance+0x1>
     22a:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <distance>
     22e:	44 97       	sbiw	r24, 0x14	; 20
     230:	14 f0       	brlt	.+4      	; 0x236 <GET_STATE+0x30>
     232:	c0 e0       	ldi	r28, 0x00	; 0
     234:	01 c0       	rjmp	.+2      	; 0x238 <GET_STATE+0x32>
     236:	c1 e0       	ldi	r28, 0x01	; 1
     238:	86 ea       	ldi	r24, 0xA6	; 166
     23a:	0e 94 2c 06 	call	0xc58	; 0xc58 <set_servo_angel>
     23e:	2f e9       	ldi	r18, 0x9F	; 159
     240:	86 e8       	ldi	r24, 0x86	; 134
     242:	91 e0       	ldi	r25, 0x01	; 1
     244:	21 50       	subi	r18, 0x01	; 1
     246:	80 40       	sbci	r24, 0x00	; 0
     248:	90 40       	sbci	r25, 0x00	; 0
     24a:	e1 f7       	brne	.-8      	; 0x244 <GET_STATE+0x3e>
     24c:	00 c0       	rjmp	.+0      	; 0x24e <GET_STATE+0x48>
     24e:	00 00       	nop
     250:	0e 94 30 07 	call	0xe60	; 0xe60 <ultarasonic_distance>
     254:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <distance+0x1>
     258:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <distance>
     25c:	44 97       	sbiw	r24, 0x14	; 20
     25e:	14 f0       	brlt	.+4      	; 0x264 <GET_STATE+0x5e>
     260:	d0 e0       	ldi	r29, 0x00	; 0
     262:	01 c0       	rjmp	.+2      	; 0x266 <GET_STATE+0x60>
     264:	d1 e0       	ldi	r29, 0x01	; 1
     266:	80 e0       	ldi	r24, 0x00	; 0
     268:	0e 94 2c 06 	call	0xc58	; 0xc58 <set_servo_angel>
     26c:	2f e9       	ldi	r18, 0x9F	; 159
     26e:	86 e8       	ldi	r24, 0x86	; 134
     270:	91 e0       	ldi	r25, 0x01	; 1
     272:	21 50       	subi	r18, 0x01	; 1
     274:	80 40       	sbci	r24, 0x00	; 0
     276:	90 40       	sbci	r25, 0x00	; 0
     278:	e1 f7       	brne	.-8      	; 0x272 <GET_STATE+0x6c>
     27a:	00 c0       	rjmp	.+0      	; 0x27c <GET_STATE+0x76>
     27c:	00 00       	nop
     27e:	cc 23       	and	r28, r28
     280:	11 f0       	breq	.+4      	; 0x286 <GET_STATE+0x80>
     282:	d1 11       	cpse	r29, r1
     284:	07 c0       	rjmp	.+14     	; 0x294 <GET_STATE+0x8e>
     286:	c1 11       	cpse	r28, r1
     288:	08 c0       	rjmp	.+16     	; 0x29a <GET_STATE+0x94>
     28a:	dd 23       	and	r29, r29
     28c:	49 f0       	breq	.+18     	; 0x2a0 <GET_STATE+0x9a>
     28e:	81 e0       	ldi	r24, 0x01	; 1
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	08 c0       	rjmp	.+16     	; 0x2a4 <GET_STATE+0x9e>
     294:	83 e0       	ldi	r24, 0x03	; 3
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	05 c0       	rjmp	.+10     	; 0x2a4 <GET_STATE+0x9e>
     29a:	82 e0       	ldi	r24, 0x02	; 2
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	02 c0       	rjmp	.+4      	; 0x2a4 <GET_STATE+0x9e>
     2a0:	80 e0       	ldi	r24, 0x00	; 0
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	df 91       	pop	r29
     2a6:	cf 91       	pop	r28
     2a8:	08 95       	ret

000002aa <MAX>:
     2aa:	8f 92       	push	r8
     2ac:	9f 92       	push	r9
     2ae:	af 92       	push	r10
     2b0:	bf 92       	push	r11
     2b2:	cf 92       	push	r12
     2b4:	df 92       	push	r13
     2b6:	ef 92       	push	r14
     2b8:	ff 92       	push	r15
     2ba:	0f 93       	push	r16
     2bc:	1f 93       	push	r17
     2be:	cf 93       	push	r28
     2c0:	df 93       	push	r29
     2c2:	cd b7       	in	r28, 0x3d	; 61
     2c4:	de b7       	in	r29, 0x3e	; 62
     2c6:	60 97       	sbiw	r28, 0x10	; 16
     2c8:	0f b6       	in	r0, 0x3f	; 63
     2ca:	f8 94       	cli
     2cc:	de bf       	out	0x3e, r29	; 62
     2ce:	0f be       	out	0x3f, r0	; 63
     2d0:	cd bf       	out	0x3d, r28	; 61
     2d2:	80 e0       	ldi	r24, 0x00	; 0
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	21 c0       	rjmp	.+66     	; 0x31a <MAX+0x70>
     2d8:	fb 01       	movw	r30, r22
     2da:	ee 0f       	add	r30, r30
     2dc:	ff 1f       	adc	r31, r31
     2de:	ee 0f       	add	r30, r30
     2e0:	ff 1f       	adc	r31, r31
     2e2:	e8 0f       	add	r30, r24
     2e4:	f9 1f       	adc	r31, r25
     2e6:	ee 0f       	add	r30, r30
     2e8:	ff 1f       	adc	r31, r31
     2ea:	ee 0f       	add	r30, r30
     2ec:	ff 1f       	adc	r31, r31
     2ee:	e6 5c       	subi	r30, 0xC6	; 198
     2f0:	fe 4f       	sbci	r31, 0xFE	; 254
     2f2:	00 81       	ld	r16, Z
     2f4:	11 81       	ldd	r17, Z+1	; 0x01
     2f6:	22 81       	ldd	r18, Z+2	; 0x02
     2f8:	33 81       	ldd	r19, Z+3	; 0x03
     2fa:	fc 01       	movw	r30, r24
     2fc:	ee 0f       	add	r30, r30
     2fe:	ff 1f       	adc	r31, r31
     300:	ee 0f       	add	r30, r30
     302:	ff 1f       	adc	r31, r31
     304:	41 e0       	ldi	r20, 0x01	; 1
     306:	50 e0       	ldi	r21, 0x00	; 0
     308:	4c 0f       	add	r20, r28
     30a:	5d 1f       	adc	r21, r29
     30c:	e4 0f       	add	r30, r20
     30e:	f5 1f       	adc	r31, r21
     310:	00 83       	st	Z, r16
     312:	11 83       	std	Z+1, r17	; 0x01
     314:	22 83       	std	Z+2, r18	; 0x02
     316:	33 83       	std	Z+3, r19	; 0x03
     318:	01 96       	adiw	r24, 0x01	; 1
     31a:	84 30       	cpi	r24, 0x04	; 4
     31c:	91 05       	cpc	r25, r1
     31e:	e4 f2       	brlt	.-72     	; 0x2d8 <MAX+0x2e>
     320:	00 e0       	ldi	r16, 0x00	; 0
     322:	10 e0       	ldi	r17, 0x00	; 0
     324:	f1 2c       	mov	r15, r1
     326:	e1 2c       	mov	r14, r1
     328:	d1 2c       	mov	r13, r1
     32a:	c1 2c       	mov	r12, r1
     32c:	45 c0       	rjmp	.+138    	; 0x3b8 <MAX+0x10e>
     32e:	f8 01       	movw	r30, r16
     330:	ee 0f       	add	r30, r30
     332:	ff 1f       	adc	r31, r31
     334:	ee 0f       	add	r30, r30
     336:	ff 1f       	adc	r31, r31
     338:	81 e0       	ldi	r24, 0x01	; 1
     33a:	90 e0       	ldi	r25, 0x00	; 0
     33c:	8c 0f       	add	r24, r28
     33e:	9d 1f       	adc	r25, r29
     340:	e8 0f       	add	r30, r24
     342:	f9 1f       	adc	r31, r25
     344:	b0 80       	ld	r11, Z
     346:	a1 80       	ldd	r10, Z+1	; 0x01
     348:	92 80       	ldd	r9, Z+2	; 0x02
     34a:	83 80       	ldd	r8, Z+3	; 0x03
     34c:	2b 2d       	mov	r18, r11
     34e:	3a 2d       	mov	r19, r10
     350:	49 2d       	mov	r20, r9
     352:	58 2d       	mov	r21, r8
     354:	6f 2d       	mov	r22, r15
     356:	7e 2d       	mov	r23, r14
     358:	8d 2d       	mov	r24, r13
     35a:	9c 2d       	mov	r25, r12
     35c:	0e 94 02 09 	call	0x1204	; 0x1204 <__gesf2>
     360:	18 16       	cp	r1, r24
     362:	24 f4       	brge	.+8      	; 0x36c <MAX+0xc2>
     364:	bf 2c       	mov	r11, r15
     366:	ae 2c       	mov	r10, r14
     368:	9d 2c       	mov	r9, r13
     36a:	8c 2c       	mov	r8, r12
     36c:	0f 5f       	subi	r16, 0xFF	; 255
     36e:	1f 4f       	sbci	r17, 0xFF	; 255
     370:	f8 01       	movw	r30, r16
     372:	ee 0f       	add	r30, r30
     374:	ff 1f       	adc	r31, r31
     376:	ee 0f       	add	r30, r30
     378:	ff 1f       	adc	r31, r31
     37a:	41 e0       	ldi	r20, 0x01	; 1
     37c:	50 e0       	ldi	r21, 0x00	; 0
     37e:	4c 0f       	add	r20, r28
     380:	5d 1f       	adc	r21, r29
     382:	e4 0f       	add	r30, r20
     384:	f5 1f       	adc	r31, r21
     386:	f0 80       	ld	r15, Z
     388:	e1 80       	ldd	r14, Z+1	; 0x01
     38a:	d2 80       	ldd	r13, Z+2	; 0x02
     38c:	c3 80       	ldd	r12, Z+3	; 0x03
     38e:	2f 2d       	mov	r18, r15
     390:	3e 2d       	mov	r19, r14
     392:	4d 2d       	mov	r20, r13
     394:	5c 2d       	mov	r21, r12
     396:	6b 2d       	mov	r22, r11
     398:	7a 2d       	mov	r23, r10
     39a:	89 2d       	mov	r24, r9
     39c:	98 2d       	mov	r25, r8
     39e:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
     3a2:	20 e0       	ldi	r18, 0x00	; 0
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	a9 01       	movw	r20, r18
     3a8:	0e 94 02 09 	call	0x1204	; 0x1204 <__gesf2>
     3ac:	18 16       	cp	r1, r24
     3ae:	24 f4       	brge	.+8      	; 0x3b8 <MAX+0x10e>
     3b0:	fb 2c       	mov	r15, r11
     3b2:	ea 2c       	mov	r14, r10
     3b4:	d9 2c       	mov	r13, r9
     3b6:	c8 2c       	mov	r12, r8
     3b8:	03 30       	cpi	r16, 0x03	; 3
     3ba:	11 05       	cpc	r17, r1
     3bc:	0c f4       	brge	.+2      	; 0x3c0 <MAX+0x116>
     3be:	b7 cf       	rjmp	.-146    	; 0x32e <MAX+0x84>
     3c0:	6f 2d       	mov	r22, r15
     3c2:	7e 2d       	mov	r23, r14
     3c4:	8d 2d       	mov	r24, r13
     3c6:	9c 2d       	mov	r25, r12
     3c8:	60 96       	adiw	r28, 0x10	; 16
     3ca:	0f b6       	in	r0, 0x3f	; 63
     3cc:	f8 94       	cli
     3ce:	de bf       	out	0x3e, r29	; 62
     3d0:	0f be       	out	0x3f, r0	; 63
     3d2:	cd bf       	out	0x3d, r28	; 61
     3d4:	df 91       	pop	r29
     3d6:	cf 91       	pop	r28
     3d8:	1f 91       	pop	r17
     3da:	0f 91       	pop	r16
     3dc:	ff 90       	pop	r15
     3de:	ef 90       	pop	r14
     3e0:	df 90       	pop	r13
     3e2:	cf 90       	pop	r12
     3e4:	bf 90       	pop	r11
     3e6:	af 90       	pop	r10
     3e8:	9f 90       	pop	r9
     3ea:	8f 90       	pop	r8
     3ec:	08 95       	ret

000003ee <Obstacle_Avoider>:
     3ee:	0e 94 30 07 	call	0xe60	; 0xe60 <ultarasonic_distance>
     3f2:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <distance+0x1>
     3f6:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <distance>
     3fa:	44 97       	sbiw	r24, 0x14	; 20
     3fc:	24 f4       	brge	.+8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     3fe:	81 e0       	ldi	r24, 0x01	; 1
     400:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <Obstacle>
     404:	02 c0       	rjmp	.+4      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
     406:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <Obstacle>
     40a:	83 ec       	ldi	r24, 0xC3	; 195
     40c:	99 e0       	ldi	r25, 0x09	; 9
     40e:	01 97       	sbiw	r24, 0x01	; 1
     410:	f1 f7       	brne	.-4      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
     412:	00 c0       	rjmp	.+0      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     414:	00 00       	nop
     416:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <Obstacle>
     41a:	08 95       	ret

0000041c <Update>:
     41c:	4f 92       	push	r4
     41e:	5f 92       	push	r5
     420:	6f 92       	push	r6
     422:	7f 92       	push	r7
     424:	af 92       	push	r10
     426:	bf 92       	push	r11
     428:	cf 92       	push	r12
     42a:	df 92       	push	r13
     42c:	ef 92       	push	r14
     42e:	ff 92       	push	r15
     430:	0f 93       	push	r16
     432:	1f 93       	push	r17
     434:	cf 93       	push	r28
     436:	df 93       	push	r29
     438:	cd b7       	in	r28, 0x3d	; 61
     43a:	de b7       	in	r29, 0x3e	; 62
     43c:	28 97       	sbiw	r28, 0x08	; 8
     43e:	0f b6       	in	r0, 0x3f	; 63
     440:	f8 94       	cli
     442:	de bf       	out	0x3e, r29	; 62
     444:	0f be       	out	0x3f, r0	; 63
     446:	cd bf       	out	0x3d, r28	; 61
     448:	62 95       	swap	r22
     44a:	72 95       	swap	r23
     44c:	70 7f       	andi	r23, 0xF0	; 240
     44e:	76 27       	eor	r23, r22
     450:	60 7f       	andi	r22, 0xF0	; 240
     452:	76 27       	eor	r23, r22
     454:	68 0f       	add	r22, r24
     456:	79 1f       	adc	r23, r25
     458:	22 0f       	add	r18, r18
     45a:	33 1f       	adc	r19, r19
     45c:	22 0f       	add	r18, r18
     45e:	33 1f       	adc	r19, r19
     460:	8b 01       	movw	r16, r22
     462:	02 0f       	add	r16, r18
     464:	13 1f       	adc	r17, r19
     466:	d8 01       	movw	r26, r16
     468:	4d 90       	ld	r4, X+
     46a:	5d 90       	ld	r5, X+
     46c:	6d 90       	ld	r6, X+
     46e:	7c 90       	ld	r7, X
     470:	40 92 8e 01 	sts	0x018E, r4	; 0x80018e <Q_OLD>
     474:	50 92 8f 01 	sts	0x018F, r5	; 0x80018f <Q_OLD+0x1>
     478:	60 92 90 01 	sts	0x0190, r6	; 0x800190 <Q_OLD+0x2>
     47c:	70 92 91 01 	sts	0x0191, r7	; 0x800191 <Q_OLD+0x3>
     480:	ba 01       	movw	r22, r20
     482:	0e 94 55 01 	call	0x2aa	; 0x2aa <MAX>
     486:	69 83       	std	Y+1, r22	; 0x01
     488:	7a 83       	std	Y+2, r23	; 0x02
     48a:	8b 83       	std	Y+3, r24	; 0x03
     48c:	9c 83       	std	Y+4, r25	; 0x04
     48e:	60 93 92 01 	sts	0x0192, r22	; 0x800192 <Q_MAX>
     492:	70 93 93 01 	sts	0x0193, r23	; 0x800193 <Q_MAX+0x1>
     496:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <Q_MAX+0x2>
     49a:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <Q_MAX+0x3>
     49e:	a6 01       	movw	r20, r12
     4a0:	95 01       	movw	r18, r10
     4a2:	60 e0       	ldi	r22, 0x00	; 0
     4a4:	70 e0       	ldi	r23, 0x00	; 0
     4a6:	80 e8       	ldi	r24, 0x80	; 128
     4a8:	9f e3       	ldi	r25, 0x3F	; 63
     4aa:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
     4ae:	9b 01       	movw	r18, r22
     4b0:	ac 01       	movw	r20, r24
     4b2:	c3 01       	movw	r24, r6
     4b4:	b2 01       	movw	r22, r4
     4b6:	0e 94 07 09 	call	0x120e	; 0x120e <__mulsf3>
     4ba:	6d 83       	std	Y+5, r22	; 0x05
     4bc:	7e 83       	std	Y+6, r23	; 0x06
     4be:	8f 83       	std	Y+7, r24	; 0x07
     4c0:	98 87       	std	Y+8, r25	; 0x08
     4c2:	29 8d       	ldd	r18, Y+25	; 0x19
     4c4:	3a 8d       	ldd	r19, Y+26	; 0x1a
     4c6:	4b 8d       	ldd	r20, Y+27	; 0x1b
     4c8:	5c 8d       	ldd	r21, Y+28	; 0x1c
     4ca:	69 81       	ldd	r22, Y+1	; 0x01
     4cc:	7a 81       	ldd	r23, Y+2	; 0x02
     4ce:	8b 81       	ldd	r24, Y+3	; 0x03
     4d0:	9c 81       	ldd	r25, Y+4	; 0x04
     4d2:	0e 94 07 09 	call	0x120e	; 0x120e <__mulsf3>
     4d6:	2b 01       	movw	r4, r22
     4d8:	3c 01       	movw	r6, r24
     4da:	b7 01       	movw	r22, r14
     4dc:	ff 0c       	add	r15, r15
     4de:	88 0b       	sbc	r24, r24
     4e0:	99 0b       	sbc	r25, r25
     4e2:	0e 94 52 08 	call	0x10a4	; 0x10a4 <__floatsisf>
     4e6:	a3 01       	movw	r20, r6
     4e8:	92 01       	movw	r18, r4
     4ea:	0e 94 6d 07 	call	0xeda	; 0xeda <__addsf3>
     4ee:	9b 01       	movw	r18, r22
     4f0:	ac 01       	movw	r20, r24
     4f2:	c6 01       	movw	r24, r12
     4f4:	b5 01       	movw	r22, r10
     4f6:	0e 94 07 09 	call	0x120e	; 0x120e <__mulsf3>
     4fa:	9b 01       	movw	r18, r22
     4fc:	ac 01       	movw	r20, r24
     4fe:	6d 81       	ldd	r22, Y+5	; 0x05
     500:	7e 81       	ldd	r23, Y+6	; 0x06
     502:	8f 81       	ldd	r24, Y+7	; 0x07
     504:	98 85       	ldd	r25, Y+8	; 0x08
     506:	0e 94 6d 07 	call	0xeda	; 0xeda <__addsf3>
     50a:	60 93 84 01 	sts	0x0184, r22	; 0x800184 <Q_NEW>
     50e:	70 93 85 01 	sts	0x0185, r23	; 0x800185 <Q_NEW+0x1>
     512:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <Q_NEW+0x2>
     516:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <Q_NEW+0x3>
     51a:	f8 01       	movw	r30, r16
     51c:	60 83       	st	Z, r22
     51e:	71 83       	std	Z+1, r23	; 0x01
     520:	82 83       	std	Z+2, r24	; 0x02
     522:	93 83       	std	Z+3, r25	; 0x03
     524:	28 96       	adiw	r28, 0x08	; 8
     526:	0f b6       	in	r0, 0x3f	; 63
     528:	f8 94       	cli
     52a:	de bf       	out	0x3e, r29	; 62
     52c:	0f be       	out	0x3f, r0	; 63
     52e:	cd bf       	out	0x3d, r28	; 61
     530:	df 91       	pop	r29
     532:	cf 91       	pop	r28
     534:	1f 91       	pop	r17
     536:	0f 91       	pop	r16
     538:	ff 90       	pop	r15
     53a:	ef 90       	pop	r14
     53c:	df 90       	pop	r13
     53e:	cf 90       	pop	r12
     540:	bf 90       	pop	r11
     542:	af 90       	pop	r10
     544:	7f 90       	pop	r7
     546:	6f 90       	pop	r6
     548:	5f 90       	pop	r5
     54a:	4f 90       	pop	r4
     54c:	08 95       	ret

0000054e <ARGMAX>:
     54e:	6f 92       	push	r6
     550:	7f 92       	push	r7
     552:	8f 92       	push	r8
     554:	9f 92       	push	r9
     556:	af 92       	push	r10
     558:	bf 92       	push	r11
     55a:	cf 92       	push	r12
     55c:	df 92       	push	r13
     55e:	ef 92       	push	r14
     560:	ff 92       	push	r15
     562:	0f 93       	push	r16
     564:	1f 93       	push	r17
     566:	cf 93       	push	r28
     568:	df 93       	push	r29
     56a:	cd b7       	in	r28, 0x3d	; 61
     56c:	de b7       	in	r29, 0x3e	; 62
     56e:	60 97       	sbiw	r28, 0x10	; 16
     570:	0f b6       	in	r0, 0x3f	; 63
     572:	f8 94       	cli
     574:	de bf       	out	0x3e, r29	; 62
     576:	0f be       	out	0x3f, r0	; 63
     578:	cd bf       	out	0x3d, r28	; 61
     57a:	40 e0       	ldi	r20, 0x00	; 0
     57c:	50 e0       	ldi	r21, 0x00	; 0
     57e:	20 c0       	rjmp	.+64     	; 0x5c0 <ARGMAX+0x72>
     580:	fb 01       	movw	r30, r22
     582:	e2 95       	swap	r30
     584:	f2 95       	swap	r31
     586:	f0 7f       	andi	r31, 0xF0	; 240
     588:	fe 27       	eor	r31, r30
     58a:	e0 7f       	andi	r30, 0xF0	; 240
     58c:	fe 27       	eor	r31, r30
     58e:	e8 0f       	add	r30, r24
     590:	f9 1f       	adc	r31, r25
     592:	9a 01       	movw	r18, r20
     594:	22 0f       	add	r18, r18
     596:	33 1f       	adc	r19, r19
     598:	22 0f       	add	r18, r18
     59a:	33 1f       	adc	r19, r19
     59c:	e2 0f       	add	r30, r18
     59e:	f3 1f       	adc	r31, r19
     5a0:	c0 80       	ld	r12, Z
     5a2:	d1 80       	ldd	r13, Z+1	; 0x01
     5a4:	e2 80       	ldd	r14, Z+2	; 0x02
     5a6:	f3 80       	ldd	r15, Z+3	; 0x03
     5a8:	e1 e0       	ldi	r30, 0x01	; 1
     5aa:	f0 e0       	ldi	r31, 0x00	; 0
     5ac:	ec 0f       	add	r30, r28
     5ae:	fd 1f       	adc	r31, r29
     5b0:	e2 0f       	add	r30, r18
     5b2:	f3 1f       	adc	r31, r19
     5b4:	c0 82       	st	Z, r12
     5b6:	d1 82       	std	Z+1, r13	; 0x01
     5b8:	e2 82       	std	Z+2, r14	; 0x02
     5ba:	f3 82       	std	Z+3, r15	; 0x03
     5bc:	4f 5f       	subi	r20, 0xFF	; 255
     5be:	5f 4f       	sbci	r21, 0xFF	; 255
     5c0:	44 30       	cpi	r20, 0x04	; 4
     5c2:	51 05       	cpc	r21, r1
     5c4:	ec f2       	brlt	.-70     	; 0x580 <ARGMAX+0x32>
     5c6:	00 e0       	ldi	r16, 0x00	; 0
     5c8:	10 e0       	ldi	r17, 0x00	; 0
     5ca:	c1 2c       	mov	r12, r1
     5cc:	d1 2c       	mov	r13, r1
     5ce:	f1 2c       	mov	r15, r1
     5d0:	e1 2c       	mov	r14, r1
     5d2:	45 c0       	rjmp	.+138    	; 0x65e <ARGMAX+0x110>
     5d4:	f8 01       	movw	r30, r16
     5d6:	ee 0f       	add	r30, r30
     5d8:	ff 1f       	adc	r31, r31
     5da:	ee 0f       	add	r30, r30
     5dc:	ff 1f       	adc	r31, r31
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	8c 0f       	add	r24, r28
     5e4:	9d 1f       	adc	r25, r29
     5e6:	e8 0f       	add	r30, r24
     5e8:	f9 1f       	adc	r31, r25
     5ea:	b0 80       	ld	r11, Z
     5ec:	a1 80       	ldd	r10, Z+1	; 0x01
     5ee:	92 80       	ldd	r9, Z+2	; 0x02
     5f0:	83 80       	ldd	r8, Z+3	; 0x03
     5f2:	2b 2d       	mov	r18, r11
     5f4:	3a 2d       	mov	r19, r10
     5f6:	49 2d       	mov	r20, r9
     5f8:	58 2d       	mov	r21, r8
     5fa:	6c 2d       	mov	r22, r12
     5fc:	7d 2d       	mov	r23, r13
     5fe:	8f 2d       	mov	r24, r15
     600:	9e 2d       	mov	r25, r14
     602:	0e 94 02 09 	call	0x1204	; 0x1204 <__gesf2>
     606:	18 16       	cp	r1, r24
     608:	24 f4       	brge	.+8      	; 0x612 <ARGMAX+0xc4>
     60a:	bc 2c       	mov	r11, r12
     60c:	ad 2c       	mov	r10, r13
     60e:	9f 2c       	mov	r9, r15
     610:	8e 2c       	mov	r8, r14
     612:	0f 5f       	subi	r16, 0xFF	; 255
     614:	1f 4f       	sbci	r17, 0xFF	; 255
     616:	f8 01       	movw	r30, r16
     618:	ee 0f       	add	r30, r30
     61a:	ff 1f       	adc	r31, r31
     61c:	ee 0f       	add	r30, r30
     61e:	ff 1f       	adc	r31, r31
     620:	81 e0       	ldi	r24, 0x01	; 1
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	8c 0f       	add	r24, r28
     626:	9d 1f       	adc	r25, r29
     628:	e8 0f       	add	r30, r24
     62a:	f9 1f       	adc	r31, r25
     62c:	c0 80       	ld	r12, Z
     62e:	d1 80       	ldd	r13, Z+1	; 0x01
     630:	f2 80       	ldd	r15, Z+2	; 0x02
     632:	e3 80       	ldd	r14, Z+3	; 0x03
     634:	2c 2d       	mov	r18, r12
     636:	3d 2d       	mov	r19, r13
     638:	4f 2d       	mov	r20, r15
     63a:	5e 2d       	mov	r21, r14
     63c:	6b 2d       	mov	r22, r11
     63e:	7a 2d       	mov	r23, r10
     640:	89 2d       	mov	r24, r9
     642:	98 2d       	mov	r25, r8
     644:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
     648:	20 e0       	ldi	r18, 0x00	; 0
     64a:	30 e0       	ldi	r19, 0x00	; 0
     64c:	a9 01       	movw	r20, r18
     64e:	0e 94 02 09 	call	0x1204	; 0x1204 <__gesf2>
     652:	18 16       	cp	r1, r24
     654:	24 f4       	brge	.+8      	; 0x65e <ARGMAX+0x110>
     656:	cb 2c       	mov	r12, r11
     658:	da 2c       	mov	r13, r10
     65a:	f9 2c       	mov	r15, r9
     65c:	e8 2c       	mov	r14, r8
     65e:	03 30       	cpi	r16, 0x03	; 3
     660:	11 05       	cpc	r17, r1
     662:	0c f4       	brge	.+2      	; 0x666 <ARGMAX+0x118>
     664:	b7 cf       	rjmp	.-146    	; 0x5d4 <ARGMAX+0x86>
     666:	00 e0       	ldi	r16, 0x00	; 0
     668:	10 e0       	ldi	r17, 0x00	; 0
     66a:	19 c0       	rjmp	.+50     	; 0x69e <ARGMAX+0x150>
     66c:	f8 01       	movw	r30, r16
     66e:	ee 0f       	add	r30, r30
     670:	ff 1f       	adc	r31, r31
     672:	ee 0f       	add	r30, r30
     674:	ff 1f       	adc	r31, r31
     676:	81 e0       	ldi	r24, 0x01	; 1
     678:	90 e0       	ldi	r25, 0x00	; 0
     67a:	8c 0f       	add	r24, r28
     67c:	9d 1f       	adc	r25, r29
     67e:	e8 0f       	add	r30, r24
     680:	f9 1f       	adc	r31, r25
     682:	20 81       	ld	r18, Z
     684:	31 81       	ldd	r19, Z+1	; 0x01
     686:	42 81       	ldd	r20, Z+2	; 0x02
     688:	53 81       	ldd	r21, Z+3	; 0x03
     68a:	6c 2d       	mov	r22, r12
     68c:	7d 2d       	mov	r23, r13
     68e:	8f 2d       	mov	r24, r15
     690:	9e 2d       	mov	r25, r14
     692:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <__cmpsf2>
     696:	88 23       	and	r24, r24
     698:	31 f0       	breq	.+12     	; 0x6a6 <ARGMAX+0x158>
     69a:	0f 5f       	subi	r16, 0xFF	; 255
     69c:	1f 4f       	sbci	r17, 0xFF	; 255
     69e:	04 30       	cpi	r16, 0x04	; 4
     6a0:	11 05       	cpc	r17, r1
     6a2:	24 f3       	brlt	.-56     	; 0x66c <ARGMAX+0x11e>
     6a4:	02 c0       	rjmp	.+4      	; 0x6aa <ARGMAX+0x15c>
     6a6:	70 2e       	mov	r7, r16
     6a8:	61 2e       	mov	r6, r17
     6aa:	87 2d       	mov	r24, r7
     6ac:	96 2d       	mov	r25, r6
     6ae:	60 96       	adiw	r28, 0x10	; 16
     6b0:	0f b6       	in	r0, 0x3f	; 63
     6b2:	f8 94       	cli
     6b4:	de bf       	out	0x3e, r29	; 62
     6b6:	0f be       	out	0x3f, r0	; 63
     6b8:	cd bf       	out	0x3d, r28	; 61
     6ba:	df 91       	pop	r29
     6bc:	cf 91       	pop	r28
     6be:	1f 91       	pop	r17
     6c0:	0f 91       	pop	r16
     6c2:	ff 90       	pop	r15
     6c4:	ef 90       	pop	r14
     6c6:	df 90       	pop	r13
     6c8:	cf 90       	pop	r12
     6ca:	bf 90       	pop	r11
     6cc:	af 90       	pop	r10
     6ce:	9f 90       	pop	r9
     6d0:	8f 90       	pop	r8
     6d2:	7f 90       	pop	r7
     6d4:	6f 90       	pop	r6
     6d6:	08 95       	ret

000006d8 <Train>:
     6d8:	af 92       	push	r10
     6da:	bf 92       	push	r11
     6dc:	cf 92       	push	r12
     6de:	df 92       	push	r13
     6e0:	ef 92       	push	r14
     6e2:	ff 92       	push	r15
     6e4:	0f 93       	push	r16
     6e6:	1f 93       	push	r17
     6e8:	cf 93       	push	r28
     6ea:	df 93       	push	r29
     6ec:	c0 e0       	ldi	r28, 0x00	; 0
     6ee:	d0 e0       	ldi	r29, 0x00	; 0
     6f0:	af c1       	rjmp	.+862    	; 0xa50 <__stack+0x151>
     6f2:	10 92 7a 01 	sts	0x017A, r1	; 0x80017a <ACTION_TAKEN>
     6f6:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <FLAG+0x1>
     6fa:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <FLAG>
     6fe:	0e 94 c3 05 	call	0xb86	; 0xb86 <forward>
     702:	0e 94 f7 01 	call	0x3ee	; 0x3ee <Obstacle_Avoider>
     706:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <Obstacle>
     70a:	88 23       	and	r24, r24
     70c:	c1 f3       	breq	.-16     	; 0x6fe <Train+0x26>
     70e:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <STATE>
     712:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <STATE+0x1>
     716:	01 96       	adiw	r24, 0x01	; 1
     718:	83 70       	andi	r24, 0x03	; 3
     71a:	90 78       	andi	r25, 0x80	; 128
     71c:	99 23       	and	r25, r25
     71e:	24 f4       	brge	.+8      	; 0x728 <Train+0x50>
     720:	01 97       	sbiw	r24, 0x01	; 1
     722:	8c 6f       	ori	r24, 0xFC	; 252
     724:	9f 6f       	ori	r25, 0xFF	; 255
     726:	01 96       	adiw	r24, 0x01	; 1
     728:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <NEXT_STATE+0x1>
     72c:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <NEXT_STATE>
     730:	81 e0       	ldi	r24, 0x01	; 1
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	90 93 97 01 	sts	0x0197, r25	; 0x800197 <FLAG+0x1>
     738:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <FLAG>
     73c:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <RANDOM>
     740:	60 93 8a 01 	sts	0x018A, r22	; 0x80018a <PROB>
     744:	70 93 8b 01 	sts	0x018B, r23	; 0x80018b <PROB+0x1>
     748:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <PROB+0x2>
     74c:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <PROB+0x3>
     750:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <EPSILON>
     754:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <EPSILON+0x1>
     758:	40 91 30 01 	lds	r20, 0x0130	; 0x800130 <EPSILON+0x2>
     75c:	50 91 31 01 	lds	r21, 0x0131	; 0x800131 <EPSILON+0x3>
     760:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <__cmpsf2>
     764:	18 16       	cp	r1, r24
     766:	ac f0       	brlt	.+42     	; 0x792 <Train+0xba>
     768:	0e 94 19 0a 	call	0x1432	; 0x1432 <rand>
     76c:	83 70       	andi	r24, 0x03	; 3
     76e:	90 78       	andi	r25, 0x80	; 128
     770:	99 23       	and	r25, r25
     772:	24 f4       	brge	.+8      	; 0x77c <Train+0xa4>
     774:	01 97       	sbiw	r24, 0x01	; 1
     776:	8c 6f       	ori	r24, 0xFC	; 252
     778:	9f 6f       	ori	r25, 0xFF	; 255
     77a:	01 96       	adiw	r24, 0x01	; 1
     77c:	90 93 7c 01 	sts	0x017C, r25	; 0x80017c <ACTION+0x1>
     780:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <ACTION>
     784:	82 e0       	ldi	r24, 0x02	; 2
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	90 93 97 01 	sts	0x0197, r25	; 0x800197 <FLAG+0x1>
     78c:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <FLAG>
     790:	12 c0       	rjmp	.+36     	; 0x7b6 <Train+0xde>
     792:	60 91 7d 01 	lds	r22, 0x017D	; 0x80017d <STATE>
     796:	70 91 7e 01 	lds	r23, 0x017E	; 0x80017e <STATE+0x1>
     79a:	8a e3       	ldi	r24, 0x3A	; 58
     79c:	91 e0       	ldi	r25, 0x01	; 1
     79e:	0e 94 a7 02 	call	0x54e	; 0x54e <ARGMAX>
     7a2:	90 93 7c 01 	sts	0x017C, r25	; 0x80017c <ACTION+0x1>
     7a6:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <ACTION>
     7aa:	82 e0       	ldi	r24, 0x02	; 2
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	90 93 97 01 	sts	0x0197, r25	; 0x800197 <FLAG+0x1>
     7b2:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <FLAG>
     7b6:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <FLAG>
     7ba:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <FLAG+0x1>
     7be:	02 97       	sbiw	r24, 0x02	; 2
     7c0:	09 f0       	breq	.+2      	; 0x7c4 <Train+0xec>
     7c2:	dc c0       	rjmp	.+440    	; 0x97c <__stack+0x7d>
     7c4:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <ACTION>
     7c8:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <ACTION+0x1>
     7cc:	89 2b       	or	r24, r25
     7ce:	69 f5       	brne	.+90     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     7d0:	41 e0       	ldi	r20, 0x01	; 1
     7d2:	64 e0       	ldi	r22, 0x04	; 4
     7d4:	82 e0       	ldi	r24, 0x02	; 2
     7d6:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     7da:	2f e3       	ldi	r18, 0x3F	; 63
     7dc:	8d e0       	ldi	r24, 0x0D	; 13
     7de:	93 e0       	ldi	r25, 0x03	; 3
     7e0:	21 50       	subi	r18, 0x01	; 1
     7e2:	80 40       	sbci	r24, 0x00	; 0
     7e4:	90 40       	sbci	r25, 0x00	; 0
     7e6:	e1 f7       	brne	.-8      	; 0x7e0 <Train+0x108>
     7e8:	00 c0       	rjmp	.+0      	; 0x7ea <Train+0x112>
     7ea:	00 00       	nop
     7ec:	40 e0       	ldi	r20, 0x00	; 0
     7ee:	64 e0       	ldi	r22, 0x04	; 4
     7f0:	82 e0       	ldi	r24, 0x02	; 2
     7f2:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     7f6:	0e 94 17 06 	call	0xc2e	; 0xc2e <stop>
     7fa:	e0 91 7d 01 	lds	r30, 0x017D	; 0x80017d <STATE>
     7fe:	f0 91 7e 01 	lds	r31, 0x017E	; 0x80017e <STATE+0x1>
     802:	ee 0f       	add	r30, r30
     804:	ff 1f       	adc	r31, r31
     806:	ee 0f       	add	r30, r30
     808:	ff 1f       	adc	r31, r31
     80a:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <ACTION>
     80e:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <ACTION+0x1>
     812:	e8 0f       	add	r30, r24
     814:	f9 1f       	adc	r31, r25
     816:	ee 0f       	add	r30, r30
     818:	ff 1f       	adc	r31, r31
     81a:	ec 5f       	subi	r30, 0xFC	; 252
     81c:	fe 4f       	sbci	r31, 0xFE	; 254
     81e:	80 81       	ld	r24, Z
     820:	91 81       	ldd	r25, Z+1	; 0x01
     822:	90 93 81 01 	sts	0x0181, r25	; 0x800181 <REWARD+0x1>
     826:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <REWARD>
     82a:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <ACTION>
     82e:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <ACTION+0x1>
     832:	01 97       	sbiw	r24, 0x01	; 1
     834:	79 f5       	brne	.+94     	; 0x894 <__DATA_REGION_LENGTH__+0x94>
     836:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <backward>
     83a:	41 e0       	ldi	r20, 0x01	; 1
     83c:	63 e0       	ldi	r22, 0x03	; 3
     83e:	82 e0       	ldi	r24, 0x02	; 2
     840:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     844:	2f e3       	ldi	r18, 0x3F	; 63
     846:	8d e0       	ldi	r24, 0x0D	; 13
     848:	93 e0       	ldi	r25, 0x03	; 3
     84a:	21 50       	subi	r18, 0x01	; 1
     84c:	80 40       	sbci	r24, 0x00	; 0
     84e:	90 40       	sbci	r25, 0x00	; 0
     850:	e1 f7       	brne	.-8      	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
     852:	00 c0       	rjmp	.+0      	; 0x854 <__DATA_REGION_LENGTH__+0x54>
     854:	00 00       	nop
     856:	40 e0       	ldi	r20, 0x00	; 0
     858:	63 e0       	ldi	r22, 0x03	; 3
     85a:	82 e0       	ldi	r24, 0x02	; 2
     85c:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     860:	0e 94 17 06 	call	0xc2e	; 0xc2e <stop>
     864:	e0 91 7d 01 	lds	r30, 0x017D	; 0x80017d <STATE>
     868:	f0 91 7e 01 	lds	r31, 0x017E	; 0x80017e <STATE+0x1>
     86c:	ee 0f       	add	r30, r30
     86e:	ff 1f       	adc	r31, r31
     870:	ee 0f       	add	r30, r30
     872:	ff 1f       	adc	r31, r31
     874:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <ACTION>
     878:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <ACTION+0x1>
     87c:	e8 0f       	add	r30, r24
     87e:	f9 1f       	adc	r31, r25
     880:	ee 0f       	add	r30, r30
     882:	ff 1f       	adc	r31, r31
     884:	ec 5f       	subi	r30, 0xFC	; 252
     886:	fe 4f       	sbci	r31, 0xFE	; 254
     888:	80 81       	ld	r24, Z
     88a:	91 81       	ldd	r25, Z+1	; 0x01
     88c:	90 93 81 01 	sts	0x0181, r25	; 0x800181 <REWARD+0x1>
     890:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <REWARD>
     894:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <ACTION>
     898:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <ACTION+0x1>
     89c:	02 97       	sbiw	r24, 0x02	; 2
     89e:	69 f5       	brne	.+90     	; 0x8fa <__DATA_REGION_LENGTH__+0xfa>
     8a0:	0e 94 ed 05 	call	0xbda	; 0xbda <right>
     8a4:	41 e0       	ldi	r20, 0x01	; 1
     8a6:	62 e0       	ldi	r22, 0x02	; 2
     8a8:	82 e0       	ldi	r24, 0x02	; 2
     8aa:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     8ae:	2f e3       	ldi	r18, 0x3F	; 63
     8b0:	8d e0       	ldi	r24, 0x0D	; 13
     8b2:	93 e0       	ldi	r25, 0x03	; 3
     8b4:	21 50       	subi	r18, 0x01	; 1
     8b6:	80 40       	sbci	r24, 0x00	; 0
     8b8:	90 40       	sbci	r25, 0x00	; 0
     8ba:	e1 f7       	brne	.-8      	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
     8bc:	00 c0       	rjmp	.+0      	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
     8be:	00 00       	nop
     8c0:	40 e0       	ldi	r20, 0x00	; 0
     8c2:	62 e0       	ldi	r22, 0x02	; 2
     8c4:	82 e0       	ldi	r24, 0x02	; 2
     8c6:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     8ca:	e0 91 7d 01 	lds	r30, 0x017D	; 0x80017d <STATE>
     8ce:	f0 91 7e 01 	lds	r31, 0x017E	; 0x80017e <STATE+0x1>
     8d2:	ee 0f       	add	r30, r30
     8d4:	ff 1f       	adc	r31, r31
     8d6:	ee 0f       	add	r30, r30
     8d8:	ff 1f       	adc	r31, r31
     8da:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <ACTION>
     8de:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <ACTION+0x1>
     8e2:	e8 0f       	add	r30, r24
     8e4:	f9 1f       	adc	r31, r25
     8e6:	ee 0f       	add	r30, r30
     8e8:	ff 1f       	adc	r31, r31
     8ea:	ec 5f       	subi	r30, 0xFC	; 252
     8ec:	fe 4f       	sbci	r31, 0xFE	; 254
     8ee:	80 81       	ld	r24, Z
     8f0:	91 81       	ldd	r25, Z+1	; 0x01
     8f2:	90 93 81 01 	sts	0x0181, r25	; 0x800181 <REWARD+0x1>
     8f6:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <REWARD>
     8fa:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <ACTION>
     8fe:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <ACTION+0x1>
     902:	03 97       	sbiw	r24, 0x03	; 3
     904:	79 f5       	brne	.+94     	; 0x964 <__stack+0x65>
     906:	0e 94 02 06 	call	0xc04	; 0xc04 <left>
     90a:	41 e0       	ldi	r20, 0x01	; 1
     90c:	61 e0       	ldi	r22, 0x01	; 1
     90e:	82 e0       	ldi	r24, 0x02	; 2
     910:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     914:	2f e3       	ldi	r18, 0x3F	; 63
     916:	8d e0       	ldi	r24, 0x0D	; 13
     918:	93 e0       	ldi	r25, 0x03	; 3
     91a:	21 50       	subi	r18, 0x01	; 1
     91c:	80 40       	sbci	r24, 0x00	; 0
     91e:	90 40       	sbci	r25, 0x00	; 0
     920:	e1 f7       	brne	.-8      	; 0x91a <__stack+0x1b>
     922:	00 c0       	rjmp	.+0      	; 0x924 <__stack+0x25>
     924:	00 00       	nop
     926:	40 e0       	ldi	r20, 0x00	; 0
     928:	61 e0       	ldi	r22, 0x01	; 1
     92a:	82 e0       	ldi	r24, 0x02	; 2
     92c:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     930:	0e 94 17 06 	call	0xc2e	; 0xc2e <stop>
     934:	e0 91 7d 01 	lds	r30, 0x017D	; 0x80017d <STATE>
     938:	f0 91 7e 01 	lds	r31, 0x017E	; 0x80017e <STATE+0x1>
     93c:	ee 0f       	add	r30, r30
     93e:	ff 1f       	adc	r31, r31
     940:	ee 0f       	add	r30, r30
     942:	ff 1f       	adc	r31, r31
     944:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <ACTION>
     948:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <ACTION+0x1>
     94c:	e8 0f       	add	r30, r24
     94e:	f9 1f       	adc	r31, r25
     950:	ee 0f       	add	r30, r30
     952:	ff 1f       	adc	r31, r31
     954:	ec 5f       	subi	r30, 0xFC	; 252
     956:	fe 4f       	sbci	r31, 0xFE	; 254
     958:	80 81       	ld	r24, Z
     95a:	91 81       	ldd	r25, Z+1	; 0x01
     95c:	90 93 81 01 	sts	0x0181, r25	; 0x800181 <REWARD+0x1>
     960:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <REWARD>
     964:	81 e0       	ldi	r24, 0x01	; 1
     966:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <ACTION_TAKEN>
     96a:	2f e9       	ldi	r18, 0x9F	; 159
     96c:	86 e8       	ldi	r24, 0x86	; 134
     96e:	91 e0       	ldi	r25, 0x01	; 1
     970:	21 50       	subi	r18, 0x01	; 1
     972:	80 40       	sbci	r24, 0x00	; 0
     974:	90 40       	sbci	r25, 0x00	; 0
     976:	e1 f7       	brne	.-8      	; 0x970 <__stack+0x71>
     978:	00 c0       	rjmp	.+0      	; 0x97a <__stack+0x7b>
     97a:	00 00       	nop
     97c:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <ACTION_TAKEN>
     980:	88 23       	and	r24, r24
     982:	09 f4       	brne	.+2      	; 0x986 <__stack+0x87>
     984:	64 c0       	rjmp	.+200    	; 0xa4e <__stack+0x14f>
     986:	a0 90 36 01 	lds	r10, 0x0136	; 0x800136 <ALPHA>
     98a:	b0 90 37 01 	lds	r11, 0x0137	; 0x800137 <ALPHA+0x1>
     98e:	c0 90 38 01 	lds	r12, 0x0138	; 0x800138 <ALPHA+0x2>
     992:	d0 90 39 01 	lds	r13, 0x0139	; 0x800139 <ALPHA+0x3>
     996:	e0 90 80 01 	lds	r14, 0x0180	; 0x800180 <REWARD>
     99a:	f0 90 81 01 	lds	r15, 0x0181	; 0x800181 <REWARD+0x1>
     99e:	20 91 7b 01 	lds	r18, 0x017B	; 0x80017b <ACTION>
     9a2:	30 91 7c 01 	lds	r19, 0x017C	; 0x80017c <ACTION+0x1>
     9a6:	40 91 88 01 	lds	r20, 0x0188	; 0x800188 <NEXT_STATE>
     9aa:	50 91 89 01 	lds	r21, 0x0189	; 0x800189 <NEXT_STATE+0x1>
     9ae:	60 91 7d 01 	lds	r22, 0x017D	; 0x80017d <STATE>
     9b2:	70 91 7e 01 	lds	r23, 0x017E	; 0x80017e <STATE+0x1>
     9b6:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <GAMMA+0x3>
     9ba:	8f 93       	push	r24
     9bc:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <GAMMA+0x2>
     9c0:	8f 93       	push	r24
     9c2:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <GAMMA+0x1>
     9c6:	8f 93       	push	r24
     9c8:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <GAMMA>
     9cc:	8f 93       	push	r24
     9ce:	04 e2       	ldi	r16, 0x24	; 36
     9d0:	11 e0       	ldi	r17, 0x01	; 1
     9d2:	8a e3       	ldi	r24, 0x3A	; 58
     9d4:	91 e0       	ldi	r25, 0x01	; 1
     9d6:	0e 94 0e 02 	call	0x41c	; 0x41c <Update>
     9da:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <NEXT_STATE>
     9de:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <NEXT_STATE+0x1>
     9e2:	90 93 7e 01 	sts	0x017E, r25	; 0x80017e <STATE+0x1>
     9e6:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <STATE>
     9ea:	60 91 2e 01 	lds	r22, 0x012E	; 0x80012e <EPSILON>
     9ee:	70 91 2f 01 	lds	r23, 0x012F	; 0x80012f <EPSILON+0x1>
     9f2:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <EPSILON+0x2>
     9f6:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <EPSILON+0x3>
     9fa:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <DECAY>
     9fe:	60 93 2e 01 	sts	0x012E, r22	; 0x80012e <EPSILON>
     a02:	70 93 2f 01 	sts	0x012F, r23	; 0x80012f <EPSILON+0x1>
     a06:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <EPSILON+0x2>
     a0a:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <EPSILON+0x3>
     a0e:	2f e9       	ldi	r18, 0x9F	; 159
     a10:	86 e8       	ldi	r24, 0x86	; 134
     a12:	91 e0       	ldi	r25, 0x01	; 1
     a14:	21 50       	subi	r18, 0x01	; 1
     a16:	80 40       	sbci	r24, 0x00	; 0
     a18:	90 40       	sbci	r25, 0x00	; 0
     a1a:	e1 f7       	brne	.-8      	; 0xa14 <__stack+0x115>
     a1c:	00 c0       	rjmp	.+0      	; 0xa1e <__stack+0x11f>
     a1e:	00 00       	nop
     a20:	41 e0       	ldi	r20, 0x01	; 1
     a22:	65 e0       	ldi	r22, 0x05	; 5
     a24:	82 e0       	ldi	r24, 0x02	; 2
     a26:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     a2a:	2f e9       	ldi	r18, 0x9F	; 159
     a2c:	86 e8       	ldi	r24, 0x86	; 134
     a2e:	91 e0       	ldi	r25, 0x01	; 1
     a30:	21 50       	subi	r18, 0x01	; 1
     a32:	80 40       	sbci	r24, 0x00	; 0
     a34:	90 40       	sbci	r25, 0x00	; 0
     a36:	e1 f7       	brne	.-8      	; 0xa30 <__stack+0x131>
     a38:	00 c0       	rjmp	.+0      	; 0xa3a <__stack+0x13b>
     a3a:	00 00       	nop
     a3c:	40 e0       	ldi	r20, 0x00	; 0
     a3e:	65 e0       	ldi	r22, 0x05	; 5
     a40:	82 e0       	ldi	r24, 0x02	; 2
     a42:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     a46:	0f 90       	pop	r0
     a48:	0f 90       	pop	r0
     a4a:	0f 90       	pop	r0
     a4c:	0f 90       	pop	r0
     a4e:	21 96       	adiw	r28, 0x01	; 1
     a50:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <EPISODES>
     a54:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <EPISODES+0x1>
     a58:	c8 17       	cp	r28, r24
     a5a:	d9 07       	cpc	r29, r25
     a5c:	0c f4       	brge	.+2      	; 0xa60 <__stack+0x161>
     a5e:	49 ce       	rjmp	.-878    	; 0x6f2 <Train+0x1a>
     a60:	0e 94 7d 00 	call	0xfa	; 0xfa <save_q_table>
     a64:	df 91       	pop	r29
     a66:	cf 91       	pop	r28
     a68:	1f 91       	pop	r17
     a6a:	0f 91       	pop	r16
     a6c:	ff 90       	pop	r15
     a6e:	ef 90       	pop	r14
     a70:	df 90       	pop	r13
     a72:	cf 90       	pop	r12
     a74:	bf 90       	pop	r11
     a76:	af 90       	pop	r10
     a78:	08 95       	ret

00000a7a <Test>:
////////////////////////////////END OF EVALUATION/////////////////////////////////////////


////////////////////////////////////////TESTING////////////////////////////////////////////
void Test(){
     retrive_q_table();
     a7a:	0e 94 b3 00 	call	0x166	; 0x166 <retrive_q_table>
	 DIO_SetPinValue(PORT2,5,1);
     a7e:	41 e0       	ldi	r20, 0x01	; 1
     a80:	65 e0       	ldi	r22, 0x05	; 5
     a82:	82 e0       	ldi	r24, 0x02	; 2
     a84:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
while(true)
 {
  forward();
     a88:	0e 94 c3 05 	call	0xb86	; 0xb86 <forward>
  Obstacle = Obstacle_Avoider();
     a8c:	0e 94 f7 01 	call	0x3ee	; 0x3ee <Obstacle_Avoider>
     a90:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <Obstacle>
  if(Obstacle == true)
     a94:	88 23       	and	r24, r24
     a96:	c1 f3       	breq	.-16     	; 0xa88 <Test+0xe>
   {
	 stop();
     a98:	0e 94 17 06 	call	0xc2e	; 0xc2e <stop>
     STATE = GET_STATE();
     a9c:	0e 94 03 01 	call	0x206	; 0x206 <GET_STATE>
     aa0:	90 93 7e 01 	sts	0x017E, r25	; 0x80017e <STATE+0x1>
     aa4:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <STATE>
     ACTION = ARGMAX(Q,STATE);
     aa8:	bc 01       	movw	r22, r24
     aaa:	8a e3       	ldi	r24, 0x3A	; 58
     aac:	91 e0       	ldi	r25, 0x01	; 1
     aae:	0e 94 a7 02 	call	0x54e	; 0x54e <ARGMAX>
     ab2:	90 93 7c 01 	sts	0x017C, r25	; 0x80017c <ACTION+0x1>
     ab6:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <ACTION>
      
     if(ACTION ==0)
     aba:	89 2b       	or	r24, r25
     abc:	69 f4       	brne	.+26     	; 0xad8 <Test+0x5e>
      {
        forward();
     abe:	0e 94 c3 05 	call	0xb86	; 0xb86 <forward>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ac2:	2f e3       	ldi	r18, 0x3F	; 63
     ac4:	8d e0       	ldi	r24, 0x0D	; 13
     ac6:	93 e0       	ldi	r25, 0x03	; 3
     ac8:	21 50       	subi	r18, 0x01	; 1
     aca:	80 40       	sbci	r24, 0x00	; 0
     acc:	90 40       	sbci	r25, 0x00	; 0
     ace:	e1 f7       	brne	.-8      	; 0xac8 <Test+0x4e>
     ad0:	00 c0       	rjmp	.+0      	; 0xad2 <Test+0x58>
     ad2:	00 00       	nop
        _delay_ms(1000);
        stop();
     ad4:	0e 94 17 06 	call	0xc2e	; 0xc2e <stop>
      }

     if(ACTION == 1)
     ad8:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <ACTION>
     adc:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <ACTION+0x1>
     ae0:	01 97       	sbiw	r24, 0x01	; 1
     ae2:	b9 f4       	brne	.+46     	; 0xb12 <Test+0x98>
       {
        backward();
     ae4:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <backward>
       DIO_SetPinValue(2,3,1);
     ae8:	41 e0       	ldi	r20, 0x01	; 1
     aea:	63 e0       	ldi	r22, 0x03	; 3
     aec:	82 e0       	ldi	r24, 0x02	; 2
     aee:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     af2:	2f e3       	ldi	r18, 0x3F	; 63
     af4:	8d e0       	ldi	r24, 0x0D	; 13
     af6:	93 e0       	ldi	r25, 0x03	; 3
     af8:	21 50       	subi	r18, 0x01	; 1
     afa:	80 40       	sbci	r24, 0x00	; 0
     afc:	90 40       	sbci	r25, 0x00	; 0
     afe:	e1 f7       	brne	.-8      	; 0xaf8 <Test+0x7e>
     b00:	00 c0       	rjmp	.+0      	; 0xb02 <Test+0x88>
     b02:	00 00       	nop
       _delay_ms(1000);
       DIO_SetPinValue(2,3,0);
     b04:	40 e0       	ldi	r20, 0x00	; 0
     b06:	63 e0       	ldi	r22, 0x03	; 3
     b08:	82 e0       	ldi	r24, 0x02	; 2
     b0a:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
        stop();
     b0e:	0e 94 17 06 	call	0xc2e	; 0xc2e <stop>
       }
     if(ACTION == 2)
     b12:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <ACTION>
     b16:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <ACTION+0x1>
     b1a:	02 97       	sbiw	r24, 0x02	; 2
     b1c:	a9 f4       	brne	.+42     	; 0xb48 <Test+0xce>
       {
        right();
     b1e:	0e 94 ed 05 	call	0xbda	; 0xbda <right>
		 DIO_SetPinValue(2,2,1);
     b22:	41 e0       	ldi	r20, 0x01	; 1
     b24:	62 e0       	ldi	r22, 0x02	; 2
     b26:	82 e0       	ldi	r24, 0x02	; 2
     b28:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     b2c:	2f e3       	ldi	r18, 0x3F	; 63
     b2e:	8d e0       	ldi	r24, 0x0D	; 13
     b30:	93 e0       	ldi	r25, 0x03	; 3
     b32:	21 50       	subi	r18, 0x01	; 1
     b34:	80 40       	sbci	r24, 0x00	; 0
     b36:	90 40       	sbci	r25, 0x00	; 0
     b38:	e1 f7       	brne	.-8      	; 0xb32 <Test+0xb8>
     b3a:	00 c0       	rjmp	.+0      	; 0xb3c <Test+0xc2>
     b3c:	00 00       	nop
		 _delay_ms(1000);
		 DIO_SetPinValue(2,2,0);
     b3e:	40 e0       	ldi	r20, 0x00	; 0
     b40:	62 e0       	ldi	r22, 0x02	; 2
     b42:	82 e0       	ldi	r24, 0x02	; 2
     b44:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
       }

     if(ACTION == 3)
     b48:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <ACTION>
     b4c:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <ACTION+0x1>
     b50:	03 97       	sbiw	r24, 0x03	; 3
     b52:	09 f0       	breq	.+2      	; 0xb56 <Test+0xdc>
     b54:	99 cf       	rjmp	.-206    	; 0xa88 <Test+0xe>
       {
        left();
     b56:	0e 94 02 06 	call	0xc04	; 0xc04 <left>
       DIO_SetPinValue(2,1,1);
     b5a:	41 e0       	ldi	r20, 0x01	; 1
     b5c:	61 e0       	ldi	r22, 0x01	; 1
     b5e:	82 e0       	ldi	r24, 0x02	; 2
     b60:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     b64:	2f e3       	ldi	r18, 0x3F	; 63
     b66:	8d e0       	ldi	r24, 0x0D	; 13
     b68:	93 e0       	ldi	r25, 0x03	; 3
     b6a:	21 50       	subi	r18, 0x01	; 1
     b6c:	80 40       	sbci	r24, 0x00	; 0
     b6e:	90 40       	sbci	r25, 0x00	; 0
     b70:	e1 f7       	brne	.-8      	; 0xb6a <Test+0xf0>
     b72:	00 c0       	rjmp	.+0      	; 0xb74 <Test+0xfa>
     b74:	00 00       	nop
       _delay_ms(1000);
       DIO_SetPinValue(2,1,0);
     b76:	40 e0       	ldi	r20, 0x00	; 0
     b78:	61 e0       	ldi	r22, 0x01	; 1
     b7a:	82 e0       	ldi	r24, 0x02	; 2
     b7c:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
        stop();
     b80:	0e 94 17 06 	call	0xc2e	; 0xc2e <stop>
     b84:	81 cf       	rjmp	.-254    	; 0xa88 <Test+0xe>

00000b86 <forward>:
 #include "Ultarasonic/DIO/DIO_Interface.h"
 #include "RC_Controling_interface.h"
 

void forward(){
 DIO_SetPinValue(PORT3,0,1);
     b86:	41 e0       	ldi	r20, 0x01	; 1
     b88:	60 e0       	ldi	r22, 0x00	; 0
     b8a:	83 e0       	ldi	r24, 0x03	; 3
     b8c:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
 DIO_SetPinValue(PORT3,1,0);
     b90:	40 e0       	ldi	r20, 0x00	; 0
     b92:	61 e0       	ldi	r22, 0x01	; 1
     b94:	83 e0       	ldi	r24, 0x03	; 3
     b96:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
 DIO_SetPinValue(PORT3,2,1);
     b9a:	41 e0       	ldi	r20, 0x01	; 1
     b9c:	62 e0       	ldi	r22, 0x02	; 2
     b9e:	83 e0       	ldi	r24, 0x03	; 3
     ba0:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
 DIO_SetPinValue(PORT3,3,0);
     ba4:	40 e0       	ldi	r20, 0x00	; 0
     ba6:	63 e0       	ldi	r22, 0x03	; 3
     ba8:	83 e0       	ldi	r24, 0x03	; 3
     baa:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     bae:	08 95       	ret

00000bb0 <backward>:
}

 void backward(){
 DIO_SetPinValue(PORT3,0,0);
     bb0:	40 e0       	ldi	r20, 0x00	; 0
     bb2:	60 e0       	ldi	r22, 0x00	; 0
     bb4:	83 e0       	ldi	r24, 0x03	; 3
     bb6:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
 DIO_SetPinValue(PORT3,1,1);
     bba:	41 e0       	ldi	r20, 0x01	; 1
     bbc:	61 e0       	ldi	r22, 0x01	; 1
     bbe:	83 e0       	ldi	r24, 0x03	; 3
     bc0:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
 DIO_SetPinValue(PORT3,2,0);
     bc4:	40 e0       	ldi	r20, 0x00	; 0
     bc6:	62 e0       	ldi	r22, 0x02	; 2
     bc8:	83 e0       	ldi	r24, 0x03	; 3
     bca:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
 DIO_SetPinValue(PORT3,3,1);
     bce:	41 e0       	ldi	r20, 0x01	; 1
     bd0:	63 e0       	ldi	r22, 0x03	; 3
     bd2:	83 e0       	ldi	r24, 0x03	; 3
     bd4:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     bd8:	08 95       	ret

00000bda <right>:
 }
 
 void right(){
	 DIO_SetPinValue(PORT3,0,1);
     bda:	41 e0       	ldi	r20, 0x01	; 1
     bdc:	60 e0       	ldi	r22, 0x00	; 0
     bde:	83 e0       	ldi	r24, 0x03	; 3
     be0:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
	 DIO_SetPinValue(PORT3,1,0);
     be4:	40 e0       	ldi	r20, 0x00	; 0
     be6:	61 e0       	ldi	r22, 0x01	; 1
     be8:	83 e0       	ldi	r24, 0x03	; 3
     bea:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
	 DIO_SetPinValue(PORT3,2,0);
     bee:	40 e0       	ldi	r20, 0x00	; 0
     bf0:	62 e0       	ldi	r22, 0x02	; 2
     bf2:	83 e0       	ldi	r24, 0x03	; 3
     bf4:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
	 DIO_SetPinValue(PORT3,3,1);
     bf8:	41 e0       	ldi	r20, 0x01	; 1
     bfa:	63 e0       	ldi	r22, 0x03	; 3
     bfc:	83 e0       	ldi	r24, 0x03	; 3
     bfe:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     c02:	08 95       	ret

00000c04 <left>:
 
 }

 void left() {
	 DIO_SetPinValue(PORT3,0,0);
     c04:	40 e0       	ldi	r20, 0x00	; 0
     c06:	60 e0       	ldi	r22, 0x00	; 0
     c08:	83 e0       	ldi	r24, 0x03	; 3
     c0a:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
	 DIO_SetPinValue(PORT3,1,1);
     c0e:	41 e0       	ldi	r20, 0x01	; 1
     c10:	61 e0       	ldi	r22, 0x01	; 1
     c12:	83 e0       	ldi	r24, 0x03	; 3
     c14:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
	 DIO_SetPinValue(PORT3,2,1);
     c18:	41 e0       	ldi	r20, 0x01	; 1
     c1a:	62 e0       	ldi	r22, 0x02	; 2
     c1c:	83 e0       	ldi	r24, 0x03	; 3
     c1e:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
	 DIO_SetPinValue(PORT3,3,0);
     c22:	40 e0       	ldi	r20, 0x00	; 0
     c24:	63 e0       	ldi	r22, 0x03	; 3
     c26:	83 e0       	ldi	r24, 0x03	; 3
     c28:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     c2c:	08 95       	ret

00000c2e <stop>:
 }
 
 void stop(){
	  DIO_SetPinValue(PORT3,0,0);
     c2e:	40 e0       	ldi	r20, 0x00	; 0
     c30:	60 e0       	ldi	r22, 0x00	; 0
     c32:	83 e0       	ldi	r24, 0x03	; 3
     c34:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
	  DIO_SetPinValue(PORT3,1,0);
     c38:	40 e0       	ldi	r20, 0x00	; 0
     c3a:	61 e0       	ldi	r22, 0x01	; 1
     c3c:	83 e0       	ldi	r24, 0x03	; 3
     c3e:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
	  DIO_SetPinValue(PORT3,2,0);
     c42:	40 e0       	ldi	r20, 0x00	; 0
     c44:	62 e0       	ldi	r22, 0x02	; 2
     c46:	83 e0       	ldi	r24, 0x03	; 3
     c48:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
	  DIO_SetPinValue(PORT3,3,0);
     c4c:	40 e0       	ldi	r20, 0x00	; 0
     c4e:	63 e0       	ldi	r22, 0x03	; 3
     c50:	83 e0       	ldi	r24, 0x03	; 3
     c52:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
     c56:	08 95       	ret

00000c58 <set_servo_angel>:


void set_servo_angel(s8 angle)  //change the OCR0A value to control PWM Signal DutyCycle to control Servo Rotation angel

{
	switch(angle)
     c58:	88 23       	and	r24, r24
     c5a:	29 f0       	breq	.+10     	; 0xc66 <set_servo_angel+0xe>
     c5c:	8a 35       	cpi	r24, 0x5A	; 90
     c5e:	49 f0       	breq	.+18     	; 0xc72 <set_servo_angel+0x1a>
     c60:	86 3a       	cpi	r24, 0xA6	; 166
     c62:	49 f4       	brne	.+18     	; 0xc76 <set_servo_angel+0x1e>
     c64:	03 c0       	rjmp	.+6      	; 0xc6c <set_servo_angel+0x14>
	{
	case 0:
	OCR0A=183;break; // to obtain a Positive pulse =(1.5mS)
     c66:	87 eb       	ldi	r24, 0xB7	; 183
     c68:	87 bd       	out	0x27, r24	; 39
     c6a:	08 95       	ret
	case -90:
	OCR0A=179;break; //to obtain a Positive pulse =(1.5mS)
     c6c:	83 eb       	ldi	r24, 0xB3	; 179
     c6e:	87 bd       	out	0x27, r24	; 39
     c70:	08 95       	ret
	case 90:
	OCR0A=187;break;//to obtain a Positive pulse >(2mS)
     c72:	8b eb       	ldi	r24, 0xBB	; 187
     c74:	87 bd       	out	0x27, r24	; 39
     c76:	08 95       	ret

00000c78 <config_servo_timer>:
#include <avr/interrupt.h>

 
void config_servo_timer()
{
	DIO_SetPinDirection(3,6,HIGH); //set portD pin 6 as output (OC0A)
     c78:	41 e0       	ldi	r20, 0x01	; 1
     c7a:	66 e0       	ldi	r22, 0x06	; 6
     c7c:	83 e0       	ldi	r24, 0x03	; 3
     c7e:	0e 94 74 06 	call	0xce8	; 0xce8 <DIO_SetPinDirection>
	CLR_BIT(TCCR0B,CS00);//
     c82:	85 b5       	in	r24, 0x25	; 37
     c84:	8e 7f       	andi	r24, 0xFE	; 254
     c86:	85 bd       	out	0x25, r24	; 37
	CLR_BIT(TCCR0B,CS01);// SET pre-scaler value = 256
     c88:	85 b5       	in	r24, 0x25	; 37
     c8a:	8d 7f       	andi	r24, 0xFD	; 253
     c8c:	85 bd       	out	0x25, r24	; 37
	SET_BIT(TCCR0B,CS02);//
     c8e:	85 b5       	in	r24, 0x25	; 37
     c90:	84 60       	ori	r24, 0x04	; 4
     c92:	85 bd       	out	0x25, r24	; 37
	
	SET_BIT(TCCR0A,WGM00);//
     c94:	84 b5       	in	r24, 0x24	; 36
     c96:	81 60       	ori	r24, 0x01	; 1
     c98:	84 bd       	out	0x24, r24	; 36
	SET_BIT(TCCR0A,WGM01);// FAST PWM mode;
     c9a:	84 b5       	in	r24, 0x24	; 36
     c9c:	82 60       	ori	r24, 0x02	; 2
     c9e:	84 bd       	out	0x24, r24	; 36
	CLR_BIT(TCCR0B,WGM02);//
     ca0:	85 b5       	in	r24, 0x25	; 37
     ca2:	87 7f       	andi	r24, 0xF7	; 247
     ca4:	85 bd       	out	0x25, r24	; 37
	
	CLR_BIT(TCCR0A,COM0A0);// NON INVERTING MODE COPMARE WITH OCR0A
     ca6:	84 b5       	in	r24, 0x24	; 36
     ca8:	8f 7b       	andi	r24, 0xBF	; 191
     caa:	84 bd       	out	0x24, r24	; 36
	SET_BIT(TCCR0A,COM0A1);
     cac:	84 b5       	in	r24, 0x24	; 36
     cae:	80 68       	ori	r24, 0x80	; 128
     cb0:	84 bd       	out	0x24, r24	; 36
	
	sei();					//enable global interrupt
     cb2:	78 94       	sei
	SET_BIT(TIMSK0,TOIE0);	//enable Timer 0 Overflow interrupt
     cb4:	ee e6       	ldi	r30, 0x6E	; 110
     cb6:	f0 e0       	ldi	r31, 0x00	; 0
     cb8:	80 81       	ld	r24, Z
     cba:	81 60       	ori	r24, 0x01	; 1
     cbc:	80 83       	st	Z, r24
	
	TCNT0=178;				//pre-load value to achieve 50hz (20mS) PWM signal at OC0A pin
     cbe:	82 eb       	ldi	r24, 0xB2	; 178
     cc0:	86 bd       	out	0x26, r24	; 38
	set_servo_angel(0);     // servo starts at angel ZERO CENTER
     cc2:	80 e0       	ldi	r24, 0x00	; 0
     cc4:	0e 94 2c 06 	call	0xc58	; 0xc58 <set_servo_angel>
     cc8:	08 95       	ret

00000cca <__vector_16>:
	}
}
*/

ISR(TIMER0_OVF_vect)   //Timer0 Overflow Interrupt service routine
{
     cca:	1f 92       	push	r1
     ccc:	0f 92       	push	r0
     cce:	0f b6       	in	r0, 0x3f	; 63
     cd0:	0f 92       	push	r0
     cd2:	11 24       	eor	r1, r1
     cd4:	8f 93       	push	r24
	TCNT0=178;		//pre-load value to TCNT0 register
     cd6:	82 eb       	ldi	r24, 0xB2	; 178
     cd8:	86 bd       	out	0x26, r24	; 38
	sei();			// reEnable global interrupt
     cda:	78 94       	sei
}
     cdc:	8f 91       	pop	r24
     cde:	0f 90       	pop	r0
     ce0:	0f be       	out	0x3f, r0	; 63
     ce2:	0f 90       	pop	r0
     ce4:	1f 90       	pop	r1
     ce6:	18 95       	reti

00000ce8 <DIO_SetPinDirection>:
			  
  	  	  	    U8VA:Value_Copy--> it take on of two values (INPUT,OUTPUT)*/
/*******************************************************************************************************/			  
extern void DIO_SetPinDirection(u8 U8PortID_Copy, u8 U8PinID_Copy, u8 U8Value_Copy){

	if(((U8PortID_Copy<4) && (U8PortID_Copy>0)) && (U8PinID_Copy<=7)){
     ce8:	9f ef       	ldi	r25, 0xFF	; 255
     cea:	98 0f       	add	r25, r24
     cec:	93 30       	cpi	r25, 0x03	; 3
     cee:	08 f0       	brcs	.+2      	; 0xcf2 <DIO_SetPinDirection+0xa>
     cf0:	58 c0       	rjmp	.+176    	; 0xda2 <DIO_SetPinDirection+0xba>
     cf2:	68 30       	cpi	r22, 0x08	; 8
     cf4:	08 f0       	brcs	.+2      	; 0xcf8 <DIO_SetPinDirection+0x10>
     cf6:	55 c0       	rjmp	.+170    	; 0xda2 <DIO_SetPinDirection+0xba>
			if(U8Value_Copy == INPUT)
     cf8:	41 11       	cpse	r20, r1
     cfa:	2b c0       	rjmp	.+86     	; 0xd52 <DIO_SetPinDirection+0x6a>
			{
				switch(U8PortID_Copy)
     cfc:	82 30       	cpi	r24, 0x02	; 2
     cfe:	89 f0       	breq	.+34     	; 0xd22 <DIO_SetPinDirection+0x3a>
     d00:	83 30       	cpi	r24, 0x03	; 3
     d02:	d9 f0       	breq	.+54     	; 0xd3a <DIO_SetPinDirection+0x52>
     d04:	81 30       	cpi	r24, 0x01	; 1
     d06:	09 f0       	breq	.+2      	; 0xd0a <DIO_SetPinDirection+0x22>
     d08:	4c c0       	rjmp	.+152    	; 0xda2 <DIO_SetPinDirection+0xba>
					{ 
						case PORT1 : CLR_BIT(DDRB, U8PinID_Copy);break;
     d0a:	24 b1       	in	r18, 0x04	; 4
     d0c:	81 e0       	ldi	r24, 0x01	; 1
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	02 c0       	rjmp	.+4      	; 0xd16 <DIO_SetPinDirection+0x2e>
     d12:	88 0f       	add	r24, r24
     d14:	99 1f       	adc	r25, r25
     d16:	6a 95       	dec	r22
     d18:	e2 f7       	brpl	.-8      	; 0xd12 <DIO_SetPinDirection+0x2a>
     d1a:	80 95       	com	r24
     d1c:	82 23       	and	r24, r18
     d1e:	84 b9       	out	0x04, r24	; 4
     d20:	08 95       	ret
						case PORT2 : CLR_BIT(DDRC, U8PinID_Copy);break;
     d22:	27 b1       	in	r18, 0x07	; 7
     d24:	81 e0       	ldi	r24, 0x01	; 1
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	02 c0       	rjmp	.+4      	; 0xd2e <DIO_SetPinDirection+0x46>
     d2a:	88 0f       	add	r24, r24
     d2c:	99 1f       	adc	r25, r25
     d2e:	6a 95       	dec	r22
     d30:	e2 f7       	brpl	.-8      	; 0xd2a <DIO_SetPinDirection+0x42>
     d32:	80 95       	com	r24
     d34:	82 23       	and	r24, r18
     d36:	87 b9       	out	0x07, r24	; 7
     d38:	08 95       	ret
						case PORT3 : CLR_BIT(DDRD, U8PinID_Copy);break;
     d3a:	2a b1       	in	r18, 0x0a	; 10
     d3c:	81 e0       	ldi	r24, 0x01	; 1
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	02 c0       	rjmp	.+4      	; 0xd46 <DIO_SetPinDirection+0x5e>
     d42:	88 0f       	add	r24, r24
     d44:	99 1f       	adc	r25, r25
     d46:	6a 95       	dec	r22
     d48:	e2 f7       	brpl	.-8      	; 0xd42 <DIO_SetPinDirection+0x5a>
     d4a:	80 95       	com	r24
     d4c:	82 23       	and	r24, r18
     d4e:	8a b9       	out	0x0a, r24	; 10
     d50:	08 95       	ret
					}
			}
			else if (U8Value_Copy == OUTPUT)
     d52:	41 30       	cpi	r20, 0x01	; 1
     d54:	31 f5       	brne	.+76     	; 0xda2 <DIO_SetPinDirection+0xba>
			{
				switch(U8PortID_Copy)
     d56:	82 30       	cpi	r24, 0x02	; 2
     d58:	79 f0       	breq	.+30     	; 0xd78 <DIO_SetPinDirection+0x90>
     d5a:	83 30       	cpi	r24, 0x03	; 3
     d5c:	c1 f0       	breq	.+48     	; 0xd8e <DIO_SetPinDirection+0xa6>
     d5e:	81 30       	cpi	r24, 0x01	; 1
     d60:	01 f5       	brne	.+64     	; 0xda2 <DIO_SetPinDirection+0xba>
					{
					 
						case PORT1 : SET_BIT(DDRB, U8PinID_Copy);break;
     d62:	24 b1       	in	r18, 0x04	; 4
     d64:	81 e0       	ldi	r24, 0x01	; 1
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	02 c0       	rjmp	.+4      	; 0xd6e <DIO_SetPinDirection+0x86>
     d6a:	88 0f       	add	r24, r24
     d6c:	99 1f       	adc	r25, r25
     d6e:	6a 95       	dec	r22
     d70:	e2 f7       	brpl	.-8      	; 0xd6a <DIO_SetPinDirection+0x82>
     d72:	82 2b       	or	r24, r18
     d74:	84 b9       	out	0x04, r24	; 4
     d76:	08 95       	ret
						case PORT2 : SET_BIT(DDRC, U8PinID_Copy);break;
     d78:	27 b1       	in	r18, 0x07	; 7
     d7a:	81 e0       	ldi	r24, 0x01	; 1
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	02 c0       	rjmp	.+4      	; 0xd84 <DIO_SetPinDirection+0x9c>
     d80:	88 0f       	add	r24, r24
     d82:	99 1f       	adc	r25, r25
     d84:	6a 95       	dec	r22
     d86:	e2 f7       	brpl	.-8      	; 0xd80 <DIO_SetPinDirection+0x98>
     d88:	82 2b       	or	r24, r18
     d8a:	87 b9       	out	0x07, r24	; 7
     d8c:	08 95       	ret
						case PORT3 : SET_BIT(DDRD, U8PinID_Copy);break;
     d8e:	2a b1       	in	r18, 0x0a	; 10
     d90:	81 e0       	ldi	r24, 0x01	; 1
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	02 c0       	rjmp	.+4      	; 0xd9a <DIO_SetPinDirection+0xb2>
     d96:	88 0f       	add	r24, r24
     d98:	99 1f       	adc	r25, r25
     d9a:	6a 95       	dec	r22
     d9c:	e2 f7       	brpl	.-8      	; 0xd96 <DIO_SetPinDirection+0xae>
     d9e:	82 2b       	or	r24, r18
     da0:	8a b9       	out	0x0a, r24	; 10
     da2:	08 95       	ret

00000da4 <DIO_SetPinValue>:
  	  	  	  
			   U8VA:Value_Copy--> it take on of two values (HIGH,LOW)*/
/******************************************************************************************************/
extern void DIO_SetPinValue(u8 U8PortID_Copy, u8 U8PinID_Copy, u8 U8Value_Copy)
{
	if(((U8PortID_Copy<4) && (U8PortID_Copy>0)) && (U8PinID_Copy<=7))
     da4:	9f ef       	ldi	r25, 0xFF	; 255
     da6:	98 0f       	add	r25, r24
     da8:	93 30       	cpi	r25, 0x03	; 3
     daa:	08 f0       	brcs	.+2      	; 0xdae <DIO_SetPinValue+0xa>
     dac:	58 c0       	rjmp	.+176    	; 0xe5e <DIO_SetPinValue+0xba>
     dae:	68 30       	cpi	r22, 0x08	; 8
     db0:	08 f0       	brcs	.+2      	; 0xdb4 <DIO_SetPinValue+0x10>
     db2:	55 c0       	rjmp	.+170    	; 0xe5e <DIO_SetPinValue+0xba>
	{
		if(U8Value_Copy == HIGH)
     db4:	41 30       	cpi	r20, 0x01	; 1
     db6:	41 f5       	brne	.+80     	; 0xe08 <DIO_SetPinValue+0x64>
		{
			switch(U8PortID_Copy)
     db8:	82 30       	cpi	r24, 0x02	; 2
     dba:	81 f0       	breq	.+32     	; 0xddc <DIO_SetPinValue+0x38>
     dbc:	83 30       	cpi	r24, 0x03	; 3
     dbe:	c9 f0       	breq	.+50     	; 0xdf2 <DIO_SetPinValue+0x4e>
     dc0:	81 30       	cpi	r24, 0x01	; 1
     dc2:	09 f0       	breq	.+2      	; 0xdc6 <DIO_SetPinValue+0x22>
     dc4:	4c c0       	rjmp	.+152    	; 0xe5e <DIO_SetPinValue+0xba>
			{
				 
				case PORT1 :SET_BIT(PORTB, U8PinID_Copy);break;
     dc6:	25 b1       	in	r18, 0x05	; 5
     dc8:	81 e0       	ldi	r24, 0x01	; 1
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	02 c0       	rjmp	.+4      	; 0xdd2 <DIO_SetPinValue+0x2e>
     dce:	88 0f       	add	r24, r24
     dd0:	99 1f       	adc	r25, r25
     dd2:	6a 95       	dec	r22
     dd4:	e2 f7       	brpl	.-8      	; 0xdce <DIO_SetPinValue+0x2a>
     dd6:	82 2b       	or	r24, r18
     dd8:	85 b9       	out	0x05, r24	; 5
     dda:	08 95       	ret
				case PORT2 :SET_BIT(PORTC, U8PinID_Copy);break;
     ddc:	28 b1       	in	r18, 0x08	; 8
     dde:	81 e0       	ldi	r24, 0x01	; 1
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	02 c0       	rjmp	.+4      	; 0xde8 <DIO_SetPinValue+0x44>
     de4:	88 0f       	add	r24, r24
     de6:	99 1f       	adc	r25, r25
     de8:	6a 95       	dec	r22
     dea:	e2 f7       	brpl	.-8      	; 0xde4 <DIO_SetPinValue+0x40>
     dec:	82 2b       	or	r24, r18
     dee:	88 b9       	out	0x08, r24	; 8
     df0:	08 95       	ret
				case PORT3 :SET_BIT(PORTD, U8PinID_Copy);break;
     df2:	2b b1       	in	r18, 0x0b	; 11
     df4:	81 e0       	ldi	r24, 0x01	; 1
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	02 c0       	rjmp	.+4      	; 0xdfe <DIO_SetPinValue+0x5a>
     dfa:	88 0f       	add	r24, r24
     dfc:	99 1f       	adc	r25, r25
     dfe:	6a 95       	dec	r22
     e00:	e2 f7       	brpl	.-8      	; 0xdfa <DIO_SetPinValue+0x56>
     e02:	82 2b       	or	r24, r18
     e04:	8b b9       	out	0x0b, r24	; 11
     e06:	08 95       	ret
			}
		}
		else if(U8Value_Copy == LOW)
     e08:	41 11       	cpse	r20, r1
     e0a:	29 c0       	rjmp	.+82     	; 0xe5e <DIO_SetPinValue+0xba>
		{
			switch(U8PortID_Copy)
     e0c:	82 30       	cpi	r24, 0x02	; 2
     e0e:	81 f0       	breq	.+32     	; 0xe30 <DIO_SetPinValue+0x8c>
     e10:	83 30       	cpi	r24, 0x03	; 3
     e12:	d1 f0       	breq	.+52     	; 0xe48 <DIO_SetPinValue+0xa4>
     e14:	81 30       	cpi	r24, 0x01	; 1
     e16:	19 f5       	brne	.+70     	; 0xe5e <DIO_SetPinValue+0xba>
			{
				 
				case PORT1 :CLR_BIT(PORTB, U8PinID_Copy);break;
     e18:	25 b1       	in	r18, 0x05	; 5
     e1a:	81 e0       	ldi	r24, 0x01	; 1
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	02 c0       	rjmp	.+4      	; 0xe24 <DIO_SetPinValue+0x80>
     e20:	88 0f       	add	r24, r24
     e22:	99 1f       	adc	r25, r25
     e24:	6a 95       	dec	r22
     e26:	e2 f7       	brpl	.-8      	; 0xe20 <DIO_SetPinValue+0x7c>
     e28:	80 95       	com	r24
     e2a:	82 23       	and	r24, r18
     e2c:	85 b9       	out	0x05, r24	; 5
     e2e:	08 95       	ret
				case PORT2 :CLR_BIT(PORTC, U8PinID_Copy);break;
     e30:	28 b1       	in	r18, 0x08	; 8
     e32:	81 e0       	ldi	r24, 0x01	; 1
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	02 c0       	rjmp	.+4      	; 0xe3c <DIO_SetPinValue+0x98>
     e38:	88 0f       	add	r24, r24
     e3a:	99 1f       	adc	r25, r25
     e3c:	6a 95       	dec	r22
     e3e:	e2 f7       	brpl	.-8      	; 0xe38 <DIO_SetPinValue+0x94>
     e40:	80 95       	com	r24
     e42:	82 23       	and	r24, r18
     e44:	88 b9       	out	0x08, r24	; 8
     e46:	08 95       	ret
				case PORT3 :CLR_BIT(PORTD, U8PinID_Copy);break;
     e48:	2b b1       	in	r18, 0x0b	; 11
     e4a:	81 e0       	ldi	r24, 0x01	; 1
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	02 c0       	rjmp	.+4      	; 0xe54 <DIO_SetPinValue+0xb0>
     e50:	88 0f       	add	r24, r24
     e52:	99 1f       	adc	r25, r25
     e54:	6a 95       	dec	r22
     e56:	e2 f7       	brpl	.-8      	; 0xe50 <DIO_SetPinValue+0xac>
     e58:	80 95       	com	r24
     e5a:	82 23       	and	r24, r18
     e5c:	8b b9       	out	0x0b, r24	; 11
     e5e:	08 95       	ret

00000e60 <ultarasonic_distance>:
 #include <util/delay.h>

 u16 ultarasonic_distance()
 {
	 u16 a,b,high,distance;
	 TCCR1A = 0;
     e60:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	 // No modification is needed in the register TCCR1A
	 
	 TIFR1 = (1<<ICF1);  // Clear ICF (Input Capture flag)  
     e64:	80 e2       	ldi	r24, 0x20	; 32
     e66:	86 bb       	out	0x16, r24	; 22
	 
	 DIO_SetPinValue(PORT3,PIN7,1);//here we are configuring the rising edge of the trigger 
     e68:	41 e0       	ldi	r20, 0x01	; 1
     e6a:	67 e0       	ldi	r22, 0x07	; 7
     e6c:	83 e0       	ldi	r24, 0x03	; 3
     e6e:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     e72:	80 e1       	ldi	r24, 0x10	; 16
     e74:	8a 95       	dec	r24
     e76:	f1 f7       	brne	.-4      	; 0xe74 <ultarasonic_distance+0x14>
     e78:	00 c0       	rjmp	.+0      	; 0xe7a <ultarasonic_distance+0x1a>
	 _delay_us(50);
	 DIO_SetPinValue(PORT3,PIN7,0); // waiting about 50 micro second as pulse duration 
     e7a:	40 e0       	ldi	r20, 0x00	; 0
     e7c:	67 e0       	ldi	r22, 0x07	; 7
     e7e:	83 e0       	ldi	r24, 0x03	; 3
     e80:	0e 94 d2 06 	call	0xda4	; 0xda4 <DIO_SetPinValue>
	 //1100 0001
	 //bit0 no prescaling is required
	 //bit7 is set to set ICES1 to 1 to adjust at the rising edge
	 //bit6 to adjust noise cancellation
	 
	 TCCR1B = 0xc1;  	/* Rising edge, no prescaler , noise canceler*/
     e84:	81 ec       	ldi	r24, 0xC1	; 193
     e86:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	 //waiting till the Input Capture Flag set to one
	 //at that case thats mean the the rising edge value occured
	 
	 while ((TIFR1&(1<<ICF1)) == 0);
     e8a:	b5 9b       	sbis	0x16, 5	; 22
     e8c:	fe cf       	rjmp	.-4      	; 0xe8a <ultarasonic_distance+0x2a>
	 a = ICR1;  		/* Take value of capture register */
     e8e:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     e92:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
	 TIFR1 = (1<<ICF1);  	/* Clear ICF flag */
     e96:	20 e2       	ldi	r18, 0x20	; 32
     e98:	26 bb       	out	0x16, r18	; 22
	 //1000 0001
	 //bit0 no prescaling is required
	 //bit7 is cleared so ICES1 will be adjusted at the falling edge
	 //bit6 to adjust noise cancellation
	 
	 TCCR1B = 0x81;  	/* Falling edge, no prescaler ,noise canceler*/
     e9a:	21 e8       	ldi	r18, 0x81	; 129
     e9c:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	 while ((TIFR1&(1<<ICF1)) == 0);
     ea0:	b5 9b       	sbis	0x16, 5	; 22
     ea2:	fe cf       	rjmp	.-4      	; 0xea0 <ultarasonic_distance+0x40>
	 b = ICR1;  		/* Take value of capture register */
     ea4:	20 91 86 00 	lds	r18, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     ea8:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
	 TIFR1 = (1<<ICF1);  	/* Clear ICF flag */
     eac:	40 e2       	ldi	r20, 0x20	; 32
     eae:	46 bb       	out	0x16, r20	; 22
	 
	 //waiting till the Input Capture Flag reset to zero
	 //at that case thats mean the the falling edge value captured in the
	 //input capture register
	 TCNT1=0;
     eb0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
     eb4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	 TCCR1B = 0;  		/* Stop the timer */
     eb8:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	 high=b-a;
     ebc:	28 1b       	sub	r18, r24
     ebe:	39 0b       	sbc	r19, r25
	 distance=((high*34600)/(F_CPU*2)) ;
     ec0:	a8 e2       	ldi	r26, 0x28	; 40
     ec2:	b7 e8       	ldi	r27, 0x87	; 135
     ec4:	0e 94 aa 09 	call	0x1354	; 0x1354 <__umulhisi3>
     ec8:	20 e8       	ldi	r18, 0x80	; 128
     eca:	34 e8       	ldi	r19, 0x84	; 132
     ecc:	4e e1       	ldi	r20, 0x1E	; 30
     ece:	50 e0       	ldi	r21, 0x00	; 0
     ed0:	0e 94 88 09 	call	0x1310	; 0x1310 <__udivmodsi4>
	 
	 return distance;
     ed4:	c9 01       	movw	r24, r18
     ed6:	08 95       	ret

00000ed8 <__subsf3>:
     ed8:	50 58       	subi	r21, 0x80	; 128

00000eda <__addsf3>:
     eda:	bb 27       	eor	r27, r27
     edc:	aa 27       	eor	r26, r26
     ede:	0e 94 84 07 	call	0xf08	; 0xf08 <__addsf3x>
     ee2:	0c 94 c8 08 	jmp	0x1190	; 0x1190 <__fp_round>
     ee6:	0e 94 ba 08 	call	0x1174	; 0x1174 <__fp_pscA>
     eea:	38 f0       	brcs	.+14     	; 0xefa <__addsf3+0x20>
     eec:	0e 94 c1 08 	call	0x1182	; 0x1182 <__fp_pscB>
     ef0:	20 f0       	brcs	.+8      	; 0xefa <__addsf3+0x20>
     ef2:	39 f4       	brne	.+14     	; 0xf02 <__addsf3+0x28>
     ef4:	9f 3f       	cpi	r25, 0xFF	; 255
     ef6:	19 f4       	brne	.+6      	; 0xefe <__addsf3+0x24>
     ef8:	26 f4       	brtc	.+8      	; 0xf02 <__addsf3+0x28>
     efa:	0c 94 b7 08 	jmp	0x116e	; 0x116e <__fp_nan>
     efe:	0e f4       	brtc	.+2      	; 0xf02 <__addsf3+0x28>
     f00:	e0 95       	com	r30
     f02:	e7 fb       	bst	r30, 7
     f04:	0c 94 b1 08 	jmp	0x1162	; 0x1162 <__fp_inf>

00000f08 <__addsf3x>:
     f08:	e9 2f       	mov	r30, r25
     f0a:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <__fp_split3>
     f0e:	58 f3       	brcs	.-42     	; 0xee6 <__addsf3+0xc>
     f10:	ba 17       	cp	r27, r26
     f12:	62 07       	cpc	r22, r18
     f14:	73 07       	cpc	r23, r19
     f16:	84 07       	cpc	r24, r20
     f18:	95 07       	cpc	r25, r21
     f1a:	20 f0       	brcs	.+8      	; 0xf24 <__addsf3x+0x1c>
     f1c:	79 f4       	brne	.+30     	; 0xf3c <__addsf3x+0x34>
     f1e:	a6 f5       	brtc	.+104    	; 0xf88 <__addsf3x+0x80>
     f20:	0c 94 fb 08 	jmp	0x11f6	; 0x11f6 <__fp_zero>
     f24:	0e f4       	brtc	.+2      	; 0xf28 <__addsf3x+0x20>
     f26:	e0 95       	com	r30
     f28:	0b 2e       	mov	r0, r27
     f2a:	ba 2f       	mov	r27, r26
     f2c:	a0 2d       	mov	r26, r0
     f2e:	0b 01       	movw	r0, r22
     f30:	b9 01       	movw	r22, r18
     f32:	90 01       	movw	r18, r0
     f34:	0c 01       	movw	r0, r24
     f36:	ca 01       	movw	r24, r20
     f38:	a0 01       	movw	r20, r0
     f3a:	11 24       	eor	r1, r1
     f3c:	ff 27       	eor	r31, r31
     f3e:	59 1b       	sub	r21, r25
     f40:	99 f0       	breq	.+38     	; 0xf68 <__addsf3x+0x60>
     f42:	59 3f       	cpi	r21, 0xF9	; 249
     f44:	50 f4       	brcc	.+20     	; 0xf5a <__addsf3x+0x52>
     f46:	50 3e       	cpi	r21, 0xE0	; 224
     f48:	68 f1       	brcs	.+90     	; 0xfa4 <__addsf3x+0x9c>
     f4a:	1a 16       	cp	r1, r26
     f4c:	f0 40       	sbci	r31, 0x00	; 0
     f4e:	a2 2f       	mov	r26, r18
     f50:	23 2f       	mov	r18, r19
     f52:	34 2f       	mov	r19, r20
     f54:	44 27       	eor	r20, r20
     f56:	58 5f       	subi	r21, 0xF8	; 248
     f58:	f3 cf       	rjmp	.-26     	; 0xf40 <__addsf3x+0x38>
     f5a:	46 95       	lsr	r20
     f5c:	37 95       	ror	r19
     f5e:	27 95       	ror	r18
     f60:	a7 95       	ror	r26
     f62:	f0 40       	sbci	r31, 0x00	; 0
     f64:	53 95       	inc	r21
     f66:	c9 f7       	brne	.-14     	; 0xf5a <__addsf3x+0x52>
     f68:	7e f4       	brtc	.+30     	; 0xf88 <__addsf3x+0x80>
     f6a:	1f 16       	cp	r1, r31
     f6c:	ba 0b       	sbc	r27, r26
     f6e:	62 0b       	sbc	r22, r18
     f70:	73 0b       	sbc	r23, r19
     f72:	84 0b       	sbc	r24, r20
     f74:	ba f0       	brmi	.+46     	; 0xfa4 <__addsf3x+0x9c>
     f76:	91 50       	subi	r25, 0x01	; 1
     f78:	a1 f0       	breq	.+40     	; 0xfa2 <__addsf3x+0x9a>
     f7a:	ff 0f       	add	r31, r31
     f7c:	bb 1f       	adc	r27, r27
     f7e:	66 1f       	adc	r22, r22
     f80:	77 1f       	adc	r23, r23
     f82:	88 1f       	adc	r24, r24
     f84:	c2 f7       	brpl	.-16     	; 0xf76 <__addsf3x+0x6e>
     f86:	0e c0       	rjmp	.+28     	; 0xfa4 <__addsf3x+0x9c>
     f88:	ba 0f       	add	r27, r26
     f8a:	62 1f       	adc	r22, r18
     f8c:	73 1f       	adc	r23, r19
     f8e:	84 1f       	adc	r24, r20
     f90:	48 f4       	brcc	.+18     	; 0xfa4 <__addsf3x+0x9c>
     f92:	87 95       	ror	r24
     f94:	77 95       	ror	r23
     f96:	67 95       	ror	r22
     f98:	b7 95       	ror	r27
     f9a:	f7 95       	ror	r31
     f9c:	9e 3f       	cpi	r25, 0xFE	; 254
     f9e:	08 f0       	brcs	.+2      	; 0xfa2 <__addsf3x+0x9a>
     fa0:	b0 cf       	rjmp	.-160    	; 0xf02 <__addsf3+0x28>
     fa2:	93 95       	inc	r25
     fa4:	88 0f       	add	r24, r24
     fa6:	08 f0       	brcs	.+2      	; 0xfaa <__addsf3x+0xa2>
     fa8:	99 27       	eor	r25, r25
     faa:	ee 0f       	add	r30, r30
     fac:	97 95       	ror	r25
     fae:	87 95       	ror	r24
     fb0:	08 95       	ret

00000fb2 <__cmpsf2>:
     fb2:	0e 94 8d 08 	call	0x111a	; 0x111a <__fp_cmp>
     fb6:	08 f4       	brcc	.+2      	; 0xfba <__cmpsf2+0x8>
     fb8:	81 e0       	ldi	r24, 0x01	; 1
     fba:	08 95       	ret

00000fbc <__divsf3>:
     fbc:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <__divsf3x>
     fc0:	0c 94 c8 08 	jmp	0x1190	; 0x1190 <__fp_round>
     fc4:	0e 94 c1 08 	call	0x1182	; 0x1182 <__fp_pscB>
     fc8:	58 f0       	brcs	.+22     	; 0xfe0 <__divsf3+0x24>
     fca:	0e 94 ba 08 	call	0x1174	; 0x1174 <__fp_pscA>
     fce:	40 f0       	brcs	.+16     	; 0xfe0 <__divsf3+0x24>
     fd0:	29 f4       	brne	.+10     	; 0xfdc <__divsf3+0x20>
     fd2:	5f 3f       	cpi	r21, 0xFF	; 255
     fd4:	29 f0       	breq	.+10     	; 0xfe0 <__divsf3+0x24>
     fd6:	0c 94 b1 08 	jmp	0x1162	; 0x1162 <__fp_inf>
     fda:	51 11       	cpse	r21, r1
     fdc:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <__fp_szero>
     fe0:	0c 94 b7 08 	jmp	0x116e	; 0x116e <__fp_nan>

00000fe4 <__divsf3x>:
     fe4:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <__fp_split3>
     fe8:	68 f3       	brcs	.-38     	; 0xfc4 <__divsf3+0x8>

00000fea <__divsf3_pse>:
     fea:	99 23       	and	r25, r25
     fec:	b1 f3       	breq	.-20     	; 0xfda <__divsf3+0x1e>
     fee:	55 23       	and	r21, r21
     ff0:	91 f3       	breq	.-28     	; 0xfd6 <__divsf3+0x1a>
     ff2:	95 1b       	sub	r25, r21
     ff4:	55 0b       	sbc	r21, r21
     ff6:	bb 27       	eor	r27, r27
     ff8:	aa 27       	eor	r26, r26
     ffa:	62 17       	cp	r22, r18
     ffc:	73 07       	cpc	r23, r19
     ffe:	84 07       	cpc	r24, r20
    1000:	38 f0       	brcs	.+14     	; 0x1010 <__divsf3_pse+0x26>
    1002:	9f 5f       	subi	r25, 0xFF	; 255
    1004:	5f 4f       	sbci	r21, 0xFF	; 255
    1006:	22 0f       	add	r18, r18
    1008:	33 1f       	adc	r19, r19
    100a:	44 1f       	adc	r20, r20
    100c:	aa 1f       	adc	r26, r26
    100e:	a9 f3       	breq	.-22     	; 0xffa <__divsf3_pse+0x10>
    1010:	35 d0       	rcall	.+106    	; 0x107c <__divsf3_pse+0x92>
    1012:	0e 2e       	mov	r0, r30
    1014:	3a f0       	brmi	.+14     	; 0x1024 <__divsf3_pse+0x3a>
    1016:	e0 e8       	ldi	r30, 0x80	; 128
    1018:	32 d0       	rcall	.+100    	; 0x107e <__divsf3_pse+0x94>
    101a:	91 50       	subi	r25, 0x01	; 1
    101c:	50 40       	sbci	r21, 0x00	; 0
    101e:	e6 95       	lsr	r30
    1020:	00 1c       	adc	r0, r0
    1022:	ca f7       	brpl	.-14     	; 0x1016 <__divsf3_pse+0x2c>
    1024:	2b d0       	rcall	.+86     	; 0x107c <__divsf3_pse+0x92>
    1026:	fe 2f       	mov	r31, r30
    1028:	29 d0       	rcall	.+82     	; 0x107c <__divsf3_pse+0x92>
    102a:	66 0f       	add	r22, r22
    102c:	77 1f       	adc	r23, r23
    102e:	88 1f       	adc	r24, r24
    1030:	bb 1f       	adc	r27, r27
    1032:	26 17       	cp	r18, r22
    1034:	37 07       	cpc	r19, r23
    1036:	48 07       	cpc	r20, r24
    1038:	ab 07       	cpc	r26, r27
    103a:	b0 e8       	ldi	r27, 0x80	; 128
    103c:	09 f0       	breq	.+2      	; 0x1040 <__divsf3_pse+0x56>
    103e:	bb 0b       	sbc	r27, r27
    1040:	80 2d       	mov	r24, r0
    1042:	bf 01       	movw	r22, r30
    1044:	ff 27       	eor	r31, r31
    1046:	93 58       	subi	r25, 0x83	; 131
    1048:	5f 4f       	sbci	r21, 0xFF	; 255
    104a:	3a f0       	brmi	.+14     	; 0x105a <__divsf3_pse+0x70>
    104c:	9e 3f       	cpi	r25, 0xFE	; 254
    104e:	51 05       	cpc	r21, r1
    1050:	78 f0       	brcs	.+30     	; 0x1070 <__divsf3_pse+0x86>
    1052:	0c 94 b1 08 	jmp	0x1162	; 0x1162 <__fp_inf>
    1056:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <__fp_szero>
    105a:	5f 3f       	cpi	r21, 0xFF	; 255
    105c:	e4 f3       	brlt	.-8      	; 0x1056 <__divsf3_pse+0x6c>
    105e:	98 3e       	cpi	r25, 0xE8	; 232
    1060:	d4 f3       	brlt	.-12     	; 0x1056 <__divsf3_pse+0x6c>
    1062:	86 95       	lsr	r24
    1064:	77 95       	ror	r23
    1066:	67 95       	ror	r22
    1068:	b7 95       	ror	r27
    106a:	f7 95       	ror	r31
    106c:	9f 5f       	subi	r25, 0xFF	; 255
    106e:	c9 f7       	brne	.-14     	; 0x1062 <__divsf3_pse+0x78>
    1070:	88 0f       	add	r24, r24
    1072:	91 1d       	adc	r25, r1
    1074:	96 95       	lsr	r25
    1076:	87 95       	ror	r24
    1078:	97 f9       	bld	r25, 7
    107a:	08 95       	ret
    107c:	e1 e0       	ldi	r30, 0x01	; 1
    107e:	66 0f       	add	r22, r22
    1080:	77 1f       	adc	r23, r23
    1082:	88 1f       	adc	r24, r24
    1084:	bb 1f       	adc	r27, r27
    1086:	62 17       	cp	r22, r18
    1088:	73 07       	cpc	r23, r19
    108a:	84 07       	cpc	r24, r20
    108c:	ba 07       	cpc	r27, r26
    108e:	20 f0       	brcs	.+8      	; 0x1098 <__divsf3_pse+0xae>
    1090:	62 1b       	sub	r22, r18
    1092:	73 0b       	sbc	r23, r19
    1094:	84 0b       	sbc	r24, r20
    1096:	ba 0b       	sbc	r27, r26
    1098:	ee 1f       	adc	r30, r30
    109a:	88 f7       	brcc	.-30     	; 0x107e <__divsf3_pse+0x94>
    109c:	e0 95       	com	r30
    109e:	08 95       	ret

000010a0 <__floatunsisf>:
    10a0:	e8 94       	clt
    10a2:	09 c0       	rjmp	.+18     	; 0x10b6 <__floatsisf+0x12>

000010a4 <__floatsisf>:
    10a4:	97 fb       	bst	r25, 7
    10a6:	3e f4       	brtc	.+14     	; 0x10b6 <__floatsisf+0x12>
    10a8:	90 95       	com	r25
    10aa:	80 95       	com	r24
    10ac:	70 95       	com	r23
    10ae:	61 95       	neg	r22
    10b0:	7f 4f       	sbci	r23, 0xFF	; 255
    10b2:	8f 4f       	sbci	r24, 0xFF	; 255
    10b4:	9f 4f       	sbci	r25, 0xFF	; 255
    10b6:	99 23       	and	r25, r25
    10b8:	a9 f0       	breq	.+42     	; 0x10e4 <__floatsisf+0x40>
    10ba:	f9 2f       	mov	r31, r25
    10bc:	96 e9       	ldi	r25, 0x96	; 150
    10be:	bb 27       	eor	r27, r27
    10c0:	93 95       	inc	r25
    10c2:	f6 95       	lsr	r31
    10c4:	87 95       	ror	r24
    10c6:	77 95       	ror	r23
    10c8:	67 95       	ror	r22
    10ca:	b7 95       	ror	r27
    10cc:	f1 11       	cpse	r31, r1
    10ce:	f8 cf       	rjmp	.-16     	; 0x10c0 <__floatsisf+0x1c>
    10d0:	fa f4       	brpl	.+62     	; 0x1110 <__floatsisf+0x6c>
    10d2:	bb 0f       	add	r27, r27
    10d4:	11 f4       	brne	.+4      	; 0x10da <__floatsisf+0x36>
    10d6:	60 ff       	sbrs	r22, 0
    10d8:	1b c0       	rjmp	.+54     	; 0x1110 <__floatsisf+0x6c>
    10da:	6f 5f       	subi	r22, 0xFF	; 255
    10dc:	7f 4f       	sbci	r23, 0xFF	; 255
    10de:	8f 4f       	sbci	r24, 0xFF	; 255
    10e0:	9f 4f       	sbci	r25, 0xFF	; 255
    10e2:	16 c0       	rjmp	.+44     	; 0x1110 <__floatsisf+0x6c>
    10e4:	88 23       	and	r24, r24
    10e6:	11 f0       	breq	.+4      	; 0x10ec <__floatsisf+0x48>
    10e8:	96 e9       	ldi	r25, 0x96	; 150
    10ea:	11 c0       	rjmp	.+34     	; 0x110e <__floatsisf+0x6a>
    10ec:	77 23       	and	r23, r23
    10ee:	21 f0       	breq	.+8      	; 0x10f8 <__floatsisf+0x54>
    10f0:	9e e8       	ldi	r25, 0x8E	; 142
    10f2:	87 2f       	mov	r24, r23
    10f4:	76 2f       	mov	r23, r22
    10f6:	05 c0       	rjmp	.+10     	; 0x1102 <__floatsisf+0x5e>
    10f8:	66 23       	and	r22, r22
    10fa:	71 f0       	breq	.+28     	; 0x1118 <__floatsisf+0x74>
    10fc:	96 e8       	ldi	r25, 0x86	; 134
    10fe:	86 2f       	mov	r24, r22
    1100:	70 e0       	ldi	r23, 0x00	; 0
    1102:	60 e0       	ldi	r22, 0x00	; 0
    1104:	2a f0       	brmi	.+10     	; 0x1110 <__floatsisf+0x6c>
    1106:	9a 95       	dec	r25
    1108:	66 0f       	add	r22, r22
    110a:	77 1f       	adc	r23, r23
    110c:	88 1f       	adc	r24, r24
    110e:	da f7       	brpl	.-10     	; 0x1106 <__floatsisf+0x62>
    1110:	88 0f       	add	r24, r24
    1112:	96 95       	lsr	r25
    1114:	87 95       	ror	r24
    1116:	97 f9       	bld	r25, 7
    1118:	08 95       	ret

0000111a <__fp_cmp>:
    111a:	99 0f       	add	r25, r25
    111c:	00 08       	sbc	r0, r0
    111e:	55 0f       	add	r21, r21
    1120:	aa 0b       	sbc	r26, r26
    1122:	e0 e8       	ldi	r30, 0x80	; 128
    1124:	fe ef       	ldi	r31, 0xFE	; 254
    1126:	16 16       	cp	r1, r22
    1128:	17 06       	cpc	r1, r23
    112a:	e8 07       	cpc	r30, r24
    112c:	f9 07       	cpc	r31, r25
    112e:	c0 f0       	brcs	.+48     	; 0x1160 <__fp_cmp+0x46>
    1130:	12 16       	cp	r1, r18
    1132:	13 06       	cpc	r1, r19
    1134:	e4 07       	cpc	r30, r20
    1136:	f5 07       	cpc	r31, r21
    1138:	98 f0       	brcs	.+38     	; 0x1160 <__fp_cmp+0x46>
    113a:	62 1b       	sub	r22, r18
    113c:	73 0b       	sbc	r23, r19
    113e:	84 0b       	sbc	r24, r20
    1140:	95 0b       	sbc	r25, r21
    1142:	39 f4       	brne	.+14     	; 0x1152 <__fp_cmp+0x38>
    1144:	0a 26       	eor	r0, r26
    1146:	61 f0       	breq	.+24     	; 0x1160 <__fp_cmp+0x46>
    1148:	23 2b       	or	r18, r19
    114a:	24 2b       	or	r18, r20
    114c:	25 2b       	or	r18, r21
    114e:	21 f4       	brne	.+8      	; 0x1158 <__fp_cmp+0x3e>
    1150:	08 95       	ret
    1152:	0a 26       	eor	r0, r26
    1154:	09 f4       	brne	.+2      	; 0x1158 <__fp_cmp+0x3e>
    1156:	a1 40       	sbci	r26, 0x01	; 1
    1158:	a6 95       	lsr	r26
    115a:	8f ef       	ldi	r24, 0xFF	; 255
    115c:	81 1d       	adc	r24, r1
    115e:	81 1d       	adc	r24, r1
    1160:	08 95       	ret

00001162 <__fp_inf>:
    1162:	97 f9       	bld	r25, 7
    1164:	9f 67       	ori	r25, 0x7F	; 127
    1166:	80 e8       	ldi	r24, 0x80	; 128
    1168:	70 e0       	ldi	r23, 0x00	; 0
    116a:	60 e0       	ldi	r22, 0x00	; 0
    116c:	08 95       	ret

0000116e <__fp_nan>:
    116e:	9f ef       	ldi	r25, 0xFF	; 255
    1170:	80 ec       	ldi	r24, 0xC0	; 192
    1172:	08 95       	ret

00001174 <__fp_pscA>:
    1174:	00 24       	eor	r0, r0
    1176:	0a 94       	dec	r0
    1178:	16 16       	cp	r1, r22
    117a:	17 06       	cpc	r1, r23
    117c:	18 06       	cpc	r1, r24
    117e:	09 06       	cpc	r0, r25
    1180:	08 95       	ret

00001182 <__fp_pscB>:
    1182:	00 24       	eor	r0, r0
    1184:	0a 94       	dec	r0
    1186:	12 16       	cp	r1, r18
    1188:	13 06       	cpc	r1, r19
    118a:	14 06       	cpc	r1, r20
    118c:	05 06       	cpc	r0, r21
    118e:	08 95       	ret

00001190 <__fp_round>:
    1190:	09 2e       	mov	r0, r25
    1192:	03 94       	inc	r0
    1194:	00 0c       	add	r0, r0
    1196:	11 f4       	brne	.+4      	; 0x119c <__fp_round+0xc>
    1198:	88 23       	and	r24, r24
    119a:	52 f0       	brmi	.+20     	; 0x11b0 <__fp_round+0x20>
    119c:	bb 0f       	add	r27, r27
    119e:	40 f4       	brcc	.+16     	; 0x11b0 <__fp_round+0x20>
    11a0:	bf 2b       	or	r27, r31
    11a2:	11 f4       	brne	.+4      	; 0x11a8 <__fp_round+0x18>
    11a4:	60 ff       	sbrs	r22, 0
    11a6:	04 c0       	rjmp	.+8      	; 0x11b0 <__fp_round+0x20>
    11a8:	6f 5f       	subi	r22, 0xFF	; 255
    11aa:	7f 4f       	sbci	r23, 0xFF	; 255
    11ac:	8f 4f       	sbci	r24, 0xFF	; 255
    11ae:	9f 4f       	sbci	r25, 0xFF	; 255
    11b0:	08 95       	ret

000011b2 <__fp_split3>:
    11b2:	57 fd       	sbrc	r21, 7
    11b4:	90 58       	subi	r25, 0x80	; 128
    11b6:	44 0f       	add	r20, r20
    11b8:	55 1f       	adc	r21, r21
    11ba:	59 f0       	breq	.+22     	; 0x11d2 <__fp_splitA+0x10>
    11bc:	5f 3f       	cpi	r21, 0xFF	; 255
    11be:	71 f0       	breq	.+28     	; 0x11dc <__fp_splitA+0x1a>
    11c0:	47 95       	ror	r20

000011c2 <__fp_splitA>:
    11c2:	88 0f       	add	r24, r24
    11c4:	97 fb       	bst	r25, 7
    11c6:	99 1f       	adc	r25, r25
    11c8:	61 f0       	breq	.+24     	; 0x11e2 <__fp_splitA+0x20>
    11ca:	9f 3f       	cpi	r25, 0xFF	; 255
    11cc:	79 f0       	breq	.+30     	; 0x11ec <__fp_splitA+0x2a>
    11ce:	87 95       	ror	r24
    11d0:	08 95       	ret
    11d2:	12 16       	cp	r1, r18
    11d4:	13 06       	cpc	r1, r19
    11d6:	14 06       	cpc	r1, r20
    11d8:	55 1f       	adc	r21, r21
    11da:	f2 cf       	rjmp	.-28     	; 0x11c0 <__fp_split3+0xe>
    11dc:	46 95       	lsr	r20
    11de:	f1 df       	rcall	.-30     	; 0x11c2 <__fp_splitA>
    11e0:	08 c0       	rjmp	.+16     	; 0x11f2 <__fp_splitA+0x30>
    11e2:	16 16       	cp	r1, r22
    11e4:	17 06       	cpc	r1, r23
    11e6:	18 06       	cpc	r1, r24
    11e8:	99 1f       	adc	r25, r25
    11ea:	f1 cf       	rjmp	.-30     	; 0x11ce <__fp_splitA+0xc>
    11ec:	86 95       	lsr	r24
    11ee:	71 05       	cpc	r23, r1
    11f0:	61 05       	cpc	r22, r1
    11f2:	08 94       	sec
    11f4:	08 95       	ret

000011f6 <__fp_zero>:
    11f6:	e8 94       	clt

000011f8 <__fp_szero>:
    11f8:	bb 27       	eor	r27, r27
    11fa:	66 27       	eor	r22, r22
    11fc:	77 27       	eor	r23, r23
    11fe:	cb 01       	movw	r24, r22
    1200:	97 f9       	bld	r25, 7
    1202:	08 95       	ret

00001204 <__gesf2>:
    1204:	0e 94 8d 08 	call	0x111a	; 0x111a <__fp_cmp>
    1208:	08 f4       	brcc	.+2      	; 0x120c <__gesf2+0x8>
    120a:	8f ef       	ldi	r24, 0xFF	; 255
    120c:	08 95       	ret

0000120e <__mulsf3>:
    120e:	0e 94 1a 09 	call	0x1234	; 0x1234 <__mulsf3x>
    1212:	0c 94 c8 08 	jmp	0x1190	; 0x1190 <__fp_round>
    1216:	0e 94 ba 08 	call	0x1174	; 0x1174 <__fp_pscA>
    121a:	38 f0       	brcs	.+14     	; 0x122a <__mulsf3+0x1c>
    121c:	0e 94 c1 08 	call	0x1182	; 0x1182 <__fp_pscB>
    1220:	20 f0       	brcs	.+8      	; 0x122a <__mulsf3+0x1c>
    1222:	95 23       	and	r25, r21
    1224:	11 f0       	breq	.+4      	; 0x122a <__mulsf3+0x1c>
    1226:	0c 94 b1 08 	jmp	0x1162	; 0x1162 <__fp_inf>
    122a:	0c 94 b7 08 	jmp	0x116e	; 0x116e <__fp_nan>
    122e:	11 24       	eor	r1, r1
    1230:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <__fp_szero>

00001234 <__mulsf3x>:
    1234:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <__fp_split3>
    1238:	70 f3       	brcs	.-36     	; 0x1216 <__mulsf3+0x8>

0000123a <__mulsf3_pse>:
    123a:	95 9f       	mul	r25, r21
    123c:	c1 f3       	breq	.-16     	; 0x122e <__mulsf3+0x20>
    123e:	95 0f       	add	r25, r21
    1240:	50 e0       	ldi	r21, 0x00	; 0
    1242:	55 1f       	adc	r21, r21
    1244:	62 9f       	mul	r22, r18
    1246:	f0 01       	movw	r30, r0
    1248:	72 9f       	mul	r23, r18
    124a:	bb 27       	eor	r27, r27
    124c:	f0 0d       	add	r31, r0
    124e:	b1 1d       	adc	r27, r1
    1250:	63 9f       	mul	r22, r19
    1252:	aa 27       	eor	r26, r26
    1254:	f0 0d       	add	r31, r0
    1256:	b1 1d       	adc	r27, r1
    1258:	aa 1f       	adc	r26, r26
    125a:	64 9f       	mul	r22, r20
    125c:	66 27       	eor	r22, r22
    125e:	b0 0d       	add	r27, r0
    1260:	a1 1d       	adc	r26, r1
    1262:	66 1f       	adc	r22, r22
    1264:	82 9f       	mul	r24, r18
    1266:	22 27       	eor	r18, r18
    1268:	b0 0d       	add	r27, r0
    126a:	a1 1d       	adc	r26, r1
    126c:	62 1f       	adc	r22, r18
    126e:	73 9f       	mul	r23, r19
    1270:	b0 0d       	add	r27, r0
    1272:	a1 1d       	adc	r26, r1
    1274:	62 1f       	adc	r22, r18
    1276:	83 9f       	mul	r24, r19
    1278:	a0 0d       	add	r26, r0
    127a:	61 1d       	adc	r22, r1
    127c:	22 1f       	adc	r18, r18
    127e:	74 9f       	mul	r23, r20
    1280:	33 27       	eor	r19, r19
    1282:	a0 0d       	add	r26, r0
    1284:	61 1d       	adc	r22, r1
    1286:	23 1f       	adc	r18, r19
    1288:	84 9f       	mul	r24, r20
    128a:	60 0d       	add	r22, r0
    128c:	21 1d       	adc	r18, r1
    128e:	82 2f       	mov	r24, r18
    1290:	76 2f       	mov	r23, r22
    1292:	6a 2f       	mov	r22, r26
    1294:	11 24       	eor	r1, r1
    1296:	9f 57       	subi	r25, 0x7F	; 127
    1298:	50 40       	sbci	r21, 0x00	; 0
    129a:	9a f0       	brmi	.+38     	; 0x12c2 <__mulsf3_pse+0x88>
    129c:	f1 f0       	breq	.+60     	; 0x12da <__mulsf3_pse+0xa0>
    129e:	88 23       	and	r24, r24
    12a0:	4a f0       	brmi	.+18     	; 0x12b4 <__mulsf3_pse+0x7a>
    12a2:	ee 0f       	add	r30, r30
    12a4:	ff 1f       	adc	r31, r31
    12a6:	bb 1f       	adc	r27, r27
    12a8:	66 1f       	adc	r22, r22
    12aa:	77 1f       	adc	r23, r23
    12ac:	88 1f       	adc	r24, r24
    12ae:	91 50       	subi	r25, 0x01	; 1
    12b0:	50 40       	sbci	r21, 0x00	; 0
    12b2:	a9 f7       	brne	.-22     	; 0x129e <__mulsf3_pse+0x64>
    12b4:	9e 3f       	cpi	r25, 0xFE	; 254
    12b6:	51 05       	cpc	r21, r1
    12b8:	80 f0       	brcs	.+32     	; 0x12da <__mulsf3_pse+0xa0>
    12ba:	0c 94 b1 08 	jmp	0x1162	; 0x1162 <__fp_inf>
    12be:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <__fp_szero>
    12c2:	5f 3f       	cpi	r21, 0xFF	; 255
    12c4:	e4 f3       	brlt	.-8      	; 0x12be <__mulsf3_pse+0x84>
    12c6:	98 3e       	cpi	r25, 0xE8	; 232
    12c8:	d4 f3       	brlt	.-12     	; 0x12be <__mulsf3_pse+0x84>
    12ca:	86 95       	lsr	r24
    12cc:	77 95       	ror	r23
    12ce:	67 95       	ror	r22
    12d0:	b7 95       	ror	r27
    12d2:	f7 95       	ror	r31
    12d4:	e7 95       	ror	r30
    12d6:	9f 5f       	subi	r25, 0xFF	; 255
    12d8:	c1 f7       	brne	.-16     	; 0x12ca <__mulsf3_pse+0x90>
    12da:	fe 2b       	or	r31, r30
    12dc:	88 0f       	add	r24, r24
    12de:	91 1d       	adc	r25, r1
    12e0:	96 95       	lsr	r25
    12e2:	87 95       	ror	r24
    12e4:	97 f9       	bld	r25, 7
    12e6:	08 95       	ret

000012e8 <__divmodhi4>:
    12e8:	97 fb       	bst	r25, 7
    12ea:	07 2e       	mov	r0, r23
    12ec:	16 f4       	brtc	.+4      	; 0x12f2 <__divmodhi4+0xa>
    12ee:	00 94       	com	r0
    12f0:	07 d0       	rcall	.+14     	; 0x1300 <__divmodhi4_neg1>
    12f2:	77 fd       	sbrc	r23, 7
    12f4:	09 d0       	rcall	.+18     	; 0x1308 <__divmodhi4_neg2>
    12f6:	0e 94 b9 09 	call	0x1372	; 0x1372 <__udivmodhi4>
    12fa:	07 fc       	sbrc	r0, 7
    12fc:	05 d0       	rcall	.+10     	; 0x1308 <__divmodhi4_neg2>
    12fe:	3e f4       	brtc	.+14     	; 0x130e <__divmodhi4_exit>

00001300 <__divmodhi4_neg1>:
    1300:	90 95       	com	r25
    1302:	81 95       	neg	r24
    1304:	9f 4f       	sbci	r25, 0xFF	; 255
    1306:	08 95       	ret

00001308 <__divmodhi4_neg2>:
    1308:	70 95       	com	r23
    130a:	61 95       	neg	r22
    130c:	7f 4f       	sbci	r23, 0xFF	; 255

0000130e <__divmodhi4_exit>:
    130e:	08 95       	ret

00001310 <__udivmodsi4>:
    1310:	a1 e2       	ldi	r26, 0x21	; 33
    1312:	1a 2e       	mov	r1, r26
    1314:	aa 1b       	sub	r26, r26
    1316:	bb 1b       	sub	r27, r27
    1318:	fd 01       	movw	r30, r26
    131a:	0d c0       	rjmp	.+26     	; 0x1336 <__udivmodsi4_ep>

0000131c <__udivmodsi4_loop>:
    131c:	aa 1f       	adc	r26, r26
    131e:	bb 1f       	adc	r27, r27
    1320:	ee 1f       	adc	r30, r30
    1322:	ff 1f       	adc	r31, r31
    1324:	a2 17       	cp	r26, r18
    1326:	b3 07       	cpc	r27, r19
    1328:	e4 07       	cpc	r30, r20
    132a:	f5 07       	cpc	r31, r21
    132c:	20 f0       	brcs	.+8      	; 0x1336 <__udivmodsi4_ep>
    132e:	a2 1b       	sub	r26, r18
    1330:	b3 0b       	sbc	r27, r19
    1332:	e4 0b       	sbc	r30, r20
    1334:	f5 0b       	sbc	r31, r21

00001336 <__udivmodsi4_ep>:
    1336:	66 1f       	adc	r22, r22
    1338:	77 1f       	adc	r23, r23
    133a:	88 1f       	adc	r24, r24
    133c:	99 1f       	adc	r25, r25
    133e:	1a 94       	dec	r1
    1340:	69 f7       	brne	.-38     	; 0x131c <__udivmodsi4_loop>
    1342:	60 95       	com	r22
    1344:	70 95       	com	r23
    1346:	80 95       	com	r24
    1348:	90 95       	com	r25
    134a:	9b 01       	movw	r18, r22
    134c:	ac 01       	movw	r20, r24
    134e:	bd 01       	movw	r22, r26
    1350:	cf 01       	movw	r24, r30
    1352:	08 95       	ret

00001354 <__umulhisi3>:
    1354:	a2 9f       	mul	r26, r18
    1356:	b0 01       	movw	r22, r0
    1358:	b3 9f       	mul	r27, r19
    135a:	c0 01       	movw	r24, r0
    135c:	a3 9f       	mul	r26, r19
    135e:	70 0d       	add	r23, r0
    1360:	81 1d       	adc	r24, r1
    1362:	11 24       	eor	r1, r1
    1364:	91 1d       	adc	r25, r1
    1366:	b2 9f       	mul	r27, r18
    1368:	70 0d       	add	r23, r0
    136a:	81 1d       	adc	r24, r1
    136c:	11 24       	eor	r1, r1
    136e:	91 1d       	adc	r25, r1
    1370:	08 95       	ret

00001372 <__udivmodhi4>:
    1372:	aa 1b       	sub	r26, r26
    1374:	bb 1b       	sub	r27, r27
    1376:	51 e1       	ldi	r21, 0x11	; 17
    1378:	07 c0       	rjmp	.+14     	; 0x1388 <__udivmodhi4_ep>

0000137a <__udivmodhi4_loop>:
    137a:	aa 1f       	adc	r26, r26
    137c:	bb 1f       	adc	r27, r27
    137e:	a6 17       	cp	r26, r22
    1380:	b7 07       	cpc	r27, r23
    1382:	10 f0       	brcs	.+4      	; 0x1388 <__udivmodhi4_ep>
    1384:	a6 1b       	sub	r26, r22
    1386:	b7 0b       	sbc	r27, r23

00001388 <__udivmodhi4_ep>:
    1388:	88 1f       	adc	r24, r24
    138a:	99 1f       	adc	r25, r25
    138c:	5a 95       	dec	r21
    138e:	a9 f7       	brne	.-22     	; 0x137a <__udivmodhi4_loop>
    1390:	80 95       	com	r24
    1392:	90 95       	com	r25
    1394:	bc 01       	movw	r22, r24
    1396:	cd 01       	movw	r24, r26
    1398:	08 95       	ret

0000139a <do_rand>:
    139a:	8f 92       	push	r8
    139c:	9f 92       	push	r9
    139e:	af 92       	push	r10
    13a0:	bf 92       	push	r11
    13a2:	cf 92       	push	r12
    13a4:	df 92       	push	r13
    13a6:	ef 92       	push	r14
    13a8:	ff 92       	push	r15
    13aa:	cf 93       	push	r28
    13ac:	df 93       	push	r29
    13ae:	ec 01       	movw	r28, r24
    13b0:	68 81       	ld	r22, Y
    13b2:	79 81       	ldd	r23, Y+1	; 0x01
    13b4:	8a 81       	ldd	r24, Y+2	; 0x02
    13b6:	9b 81       	ldd	r25, Y+3	; 0x03
    13b8:	61 15       	cp	r22, r1
    13ba:	71 05       	cpc	r23, r1
    13bc:	81 05       	cpc	r24, r1
    13be:	91 05       	cpc	r25, r1
    13c0:	21 f4       	brne	.+8      	; 0x13ca <do_rand+0x30>
    13c2:	64 e2       	ldi	r22, 0x24	; 36
    13c4:	79 ed       	ldi	r23, 0xD9	; 217
    13c6:	8b e5       	ldi	r24, 0x5B	; 91
    13c8:	97 e0       	ldi	r25, 0x07	; 7
    13ca:	2d e1       	ldi	r18, 0x1D	; 29
    13cc:	33 ef       	ldi	r19, 0xF3	; 243
    13ce:	41 e0       	ldi	r20, 0x01	; 1
    13d0:	50 e0       	ldi	r21, 0x00	; 0
    13d2:	0e 94 5a 0a 	call	0x14b4	; 0x14b4 <__divmodsi4>
    13d6:	49 01       	movw	r8, r18
    13d8:	5a 01       	movw	r10, r20
    13da:	9b 01       	movw	r18, r22
    13dc:	ac 01       	movw	r20, r24
    13de:	a7 ea       	ldi	r26, 0xA7	; 167
    13e0:	b1 e4       	ldi	r27, 0x41	; 65
    13e2:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <__muluhisi3>
    13e6:	6b 01       	movw	r12, r22
    13e8:	7c 01       	movw	r14, r24
    13ea:	ac ee       	ldi	r26, 0xEC	; 236
    13ec:	b4 ef       	ldi	r27, 0xF4	; 244
    13ee:	a5 01       	movw	r20, r10
    13f0:	94 01       	movw	r18, r8
    13f2:	0e 94 87 0a 	call	0x150e	; 0x150e <__mulohisi3>
    13f6:	dc 01       	movw	r26, r24
    13f8:	cb 01       	movw	r24, r22
    13fa:	8c 0d       	add	r24, r12
    13fc:	9d 1d       	adc	r25, r13
    13fe:	ae 1d       	adc	r26, r14
    1400:	bf 1d       	adc	r27, r15
    1402:	b7 ff       	sbrs	r27, 7
    1404:	03 c0       	rjmp	.+6      	; 0x140c <do_rand+0x72>
    1406:	01 97       	sbiw	r24, 0x01	; 1
    1408:	a1 09       	sbc	r26, r1
    140a:	b0 48       	sbci	r27, 0x80	; 128
    140c:	88 83       	st	Y, r24
    140e:	99 83       	std	Y+1, r25	; 0x01
    1410:	aa 83       	std	Y+2, r26	; 0x02
    1412:	bb 83       	std	Y+3, r27	; 0x03
    1414:	9f 77       	andi	r25, 0x7F	; 127
    1416:	df 91       	pop	r29
    1418:	cf 91       	pop	r28
    141a:	ff 90       	pop	r15
    141c:	ef 90       	pop	r14
    141e:	df 90       	pop	r13
    1420:	cf 90       	pop	r12
    1422:	bf 90       	pop	r11
    1424:	af 90       	pop	r10
    1426:	9f 90       	pop	r9
    1428:	8f 90       	pop	r8
    142a:	08 95       	ret

0000142c <rand_r>:
    142c:	0e 94 cd 09 	call	0x139a	; 0x139a <do_rand>
    1430:	08 95       	ret

00001432 <rand>:
    1432:	80 e0       	ldi	r24, 0x00	; 0
    1434:	91 e0       	ldi	r25, 0x01	; 1
    1436:	0e 94 cd 09 	call	0x139a	; 0x139a <do_rand>
    143a:	08 95       	ret

0000143c <srand>:
    143c:	a0 e0       	ldi	r26, 0x00	; 0
    143e:	b0 e0       	ldi	r27, 0x00	; 0
    1440:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1444:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1448:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    144c:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    1450:	08 95       	ret

00001452 <eeprom_read_dword>:
    1452:	a6 e1       	ldi	r26, 0x16	; 22
    1454:	b0 e0       	ldi	r27, 0x00	; 0
    1456:	44 e0       	ldi	r20, 0x04	; 4
    1458:	50 e0       	ldi	r21, 0x00	; 0
    145a:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <eeprom_read_blraw>

0000145e <eeprom_write_dword>:
    145e:	24 2f       	mov	r18, r20
    1460:	0e 94 4d 0a 	call	0x149a	; 0x149a <eeprom_write_r18>
    1464:	25 2f       	mov	r18, r21
    1466:	0e 94 4d 0a 	call	0x149a	; 0x149a <eeprom_write_r18>
    146a:	0c 94 37 0a 	jmp	0x146e	; 0x146e <eeprom_write_word>

0000146e <eeprom_write_word>:
    146e:	0e 94 4c 0a 	call	0x1498	; 0x1498 <eeprom_write_byte>
    1472:	27 2f       	mov	r18, r23
    1474:	0c 94 4d 0a 	jmp	0x149a	; 0x149a <eeprom_write_r18>

00001478 <eeprom_read_block>:
    1478:	dc 01       	movw	r26, r24
    147a:	cb 01       	movw	r24, r22

0000147c <eeprom_read_blraw>:
    147c:	fc 01       	movw	r30, r24
    147e:	f9 99       	sbic	0x1f, 1	; 31
    1480:	fe cf       	rjmp	.-4      	; 0x147e <eeprom_read_blraw+0x2>
    1482:	06 c0       	rjmp	.+12     	; 0x1490 <eeprom_read_blraw+0x14>
    1484:	f2 bd       	out	0x22, r31	; 34
    1486:	e1 bd       	out	0x21, r30	; 33
    1488:	f8 9a       	sbi	0x1f, 0	; 31
    148a:	31 96       	adiw	r30, 0x01	; 1
    148c:	00 b4       	in	r0, 0x20	; 32
    148e:	0d 92       	st	X+, r0
    1490:	41 50       	subi	r20, 0x01	; 1
    1492:	50 40       	sbci	r21, 0x00	; 0
    1494:	b8 f7       	brcc	.-18     	; 0x1484 <eeprom_read_blraw+0x8>
    1496:	08 95       	ret

00001498 <eeprom_write_byte>:
    1498:	26 2f       	mov	r18, r22

0000149a <eeprom_write_r18>:
    149a:	f9 99       	sbic	0x1f, 1	; 31
    149c:	fe cf       	rjmp	.-4      	; 0x149a <eeprom_write_r18>
    149e:	1f ba       	out	0x1f, r1	; 31
    14a0:	92 bd       	out	0x22, r25	; 34
    14a2:	81 bd       	out	0x21, r24	; 33
    14a4:	20 bd       	out	0x20, r18	; 32
    14a6:	0f b6       	in	r0, 0x3f	; 63
    14a8:	f8 94       	cli
    14aa:	fa 9a       	sbi	0x1f, 2	; 31
    14ac:	f9 9a       	sbi	0x1f, 1	; 31
    14ae:	0f be       	out	0x3f, r0	; 63
    14b0:	01 96       	adiw	r24, 0x01	; 1
    14b2:	08 95       	ret

000014b4 <__divmodsi4>:
    14b4:	05 2e       	mov	r0, r21
    14b6:	97 fb       	bst	r25, 7
    14b8:	1e f4       	brtc	.+6      	; 0x14c0 <__divmodsi4+0xc>
    14ba:	00 94       	com	r0
    14bc:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <__negsi2>
    14c0:	57 fd       	sbrc	r21, 7
    14c2:	07 d0       	rcall	.+14     	; 0x14d2 <__divmodsi4_neg2>
    14c4:	0e 94 88 09 	call	0x1310	; 0x1310 <__udivmodsi4>
    14c8:	07 fc       	sbrc	r0, 7
    14ca:	03 d0       	rcall	.+6      	; 0x14d2 <__divmodsi4_neg2>
    14cc:	4e f4       	brtc	.+18     	; 0x14e0 <__divmodsi4_exit>
    14ce:	0c 94 71 0a 	jmp	0x14e2	; 0x14e2 <__negsi2>

000014d2 <__divmodsi4_neg2>:
    14d2:	50 95       	com	r21
    14d4:	40 95       	com	r20
    14d6:	30 95       	com	r19
    14d8:	21 95       	neg	r18
    14da:	3f 4f       	sbci	r19, 0xFF	; 255
    14dc:	4f 4f       	sbci	r20, 0xFF	; 255
    14de:	5f 4f       	sbci	r21, 0xFF	; 255

000014e0 <__divmodsi4_exit>:
    14e0:	08 95       	ret

000014e2 <__negsi2>:
    14e2:	90 95       	com	r25
    14e4:	80 95       	com	r24
    14e6:	70 95       	com	r23
    14e8:	61 95       	neg	r22
    14ea:	7f 4f       	sbci	r23, 0xFF	; 255
    14ec:	8f 4f       	sbci	r24, 0xFF	; 255
    14ee:	9f 4f       	sbci	r25, 0xFF	; 255
    14f0:	08 95       	ret

000014f2 <__muluhisi3>:
    14f2:	0e 94 aa 09 	call	0x1354	; 0x1354 <__umulhisi3>
    14f6:	a5 9f       	mul	r26, r21
    14f8:	90 0d       	add	r25, r0
    14fa:	b4 9f       	mul	r27, r20
    14fc:	90 0d       	add	r25, r0
    14fe:	a4 9f       	mul	r26, r20
    1500:	80 0d       	add	r24, r0
    1502:	91 1d       	adc	r25, r1
    1504:	11 24       	eor	r1, r1
    1506:	08 95       	ret

00001508 <__mulshisi3>:
    1508:	b7 ff       	sbrs	r27, 7
    150a:	0c 94 79 0a 	jmp	0x14f2	; 0x14f2 <__muluhisi3>

0000150e <__mulohisi3>:
    150e:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <__muluhisi3>
    1512:	82 1b       	sub	r24, r18
    1514:	93 0b       	sbc	r25, r19
    1516:	08 95       	ret

00001518 <_exit>:
    1518:	f8 94       	cli

0000151a <__stop_program>:
    151a:	ff cf       	rjmp	.-2      	; 0x151a <__stop_program>
